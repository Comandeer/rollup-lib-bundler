{"version":3,"file":"rollup-lib-bundler.js","sources":["../src/OutputController.js","../src/packageParser.js","../src/targets.js","../src/bundler.js","../src/generateBanner.js","../src/rlb.js"],"sourcesContent":["import { Console } from 'console';\nimport { Writable as WritableStream } from 'stream';\nimport { Duplex as DuplexStream } from 'stream';\nimport Spinner from '@comandeer/cli-spinner';\nimport consoleControlStrings from 'console-control-strings';\n\nconst stdoutSymbol = Symbol( 'stdout' );\nconst stderrSymbol = Symbol( 'stderr' );\nconst spinnerSymbol = Symbol( 'spinner' );\n\nclass OutputController {\n\tconstructor( {\n\t\tstdout = process.stdout,\n\t\tstderr = process.stderr\n\t} = {} ) {\n\t\tif ( !isValidStream( stdout ) ) {\n\t\t\tthrow new TypeError( 'Custom stdout must be a valid writable/duplex stream' );\n\t\t}\n\n\t\tif ( !isValidStream( stderr ) ) {\n\t\t\tthrow new TypeError( 'Custom stderr must be a valid writable/duplex stream' );\n\t\t}\n\n\t\tthis[ stdoutSymbol ] = stdout;\n\t\tthis[ stderrSymbol ] = stderr;\n\t\tthis.console = new Console( {\n\t\t\tstdout,\n\t\t\tstderr\n\t\t} );\n\t\tthis[ spinnerSymbol ] = new Spinner( {\n\t\t\tlabel: 'Working…',\n\t\t\tstdout: stderr\n\t\t} );\n\t\tthis.pendingLogs = [];\n\t\tthis.pendingWarnings = [];\n\t}\n\n\t/* istanbul ignore next */\n\tasync showSpinner() {\n\t\treturn this[ spinnerSymbol ].show();\n\t}\n\n\t/* istanbul ignore next */\n\tasync hideSpinner() {\n\t\treturn this[ spinnerSymbol ].hide();\n\t}\n\n\taddLog( ...args ) {\n\t\tthis.pendingLogs.push( args );\n\t}\n\n\taddWarning( warningMessage ) {\n\t\tif ( isExternalDepWarning( warningMessage ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst warning = createWarning( warningMessage );\n\n\t\tthis.pendingWarnings.push( [ warning ] );\n\t}\n\n\tdisplay() {\n\t\tthis.pendingWarnings.forEach( ( warning ) => {\n\t\t\tthis.console.warn( ...warning );\n\t\t} );\n\n\t\tthis.pendingLogs.forEach( ( log ) => {\n\t\t\tthis.console.log( ...log );\n\t\t} );\n\t}\n\n\tdisplayError( error ) {\n\t\tconst errorLog = createError( error );\n\n\t\tthis.console.error( errorLog );\n\t}\n}\n\nfunction isValidStream( value ) {\n\treturn value instanceof WritableStream || value instanceof DuplexStream;\n}\n\nfunction isExternalDepWarning( log ) {\n\treturn log && typeof log === 'object' && log.code === 'UNRESOLVED_IMPORT';\n}\n\nfunction createWarning( warning ) {\n\tif ( warning && typeof warning === 'object' && warning.message ) {\n\t\twarning = warning.message;\n\t}\n\n\treturn `${ consoleControlStrings.color( [ 'yellow', 'bold' ] ) }⚠️ Warning!⚠️ ${ warning }${ consoleControlStrings.color( 'reset' ) }`;\n}\n\nfunction createError( { name, message, stack } ) {\n\tconst stackParts = stack.split( '\\n' );\n\n\tstackParts.shift();\n\n\tconst newStack = stackParts.join( '\\n' );\n\n\treturn `${ consoleControlStrings.color( [ 'bold', 'red' ] ) }🚨Error🚨\n${ name }: ${ message }${ consoleControlStrings.color( 'reset' ) }\n${ newStack }`;\n}\n\nexport default OutputController;\n","import { existsSync } from 'fs';\nimport { readFileSync } from 'fs';\nimport { extname } from 'path';\nimport { join as joinPath } from 'path';\n\nlet globby;\n\nasync function packageParser( packageDir ) {\n\tif ( typeof packageDir !== 'string' ) {\n\t\tthrow new TypeError( 'Provide a path to a package directory.' );\n\t}\n\n\tconst metadata = loadAndParsePackageJSONFile( packageDir );\n\tlintObject( metadata );\n\n\treturn prepareMetadata( packageDir, metadata );\n}\n\nfunction loadAndParsePackageJSONFile( dirPath ) {\n\tconst path = joinPath( dirPath, 'package.json' );\n\n\tif ( !existsSync( path ) ) {\n\t\tthrow new ReferenceError( 'The package.json does not exist in the provided location.' );\n\t}\n\n\tconst contents = readFileSync( path, 'utf8' );\n\tlet parsed;\n\n\ttry {\n\t\tparsed = JSON.parse( contents );\n\t} catch ( e ) {\n\t\tthrow new SyntaxError( 'The package.json file is not parsable as a correct JSON.' );\n\t}\n\n\treturn parsed;\n}\n\nfunction lintObject( obj ) {\n\tcheckProperty( 'name' );\n\tcheckProperty( 'version' );\n\tcheckProperties( 'exports/./import', 'exports/import', 'module', 'jsnext:main' );\n\tcheckProperty( 'author' );\n\tcheckProperty( 'license' );\n\n\tfunction checkProperty( name ) {\n\t\tif ( typeof obj[ name ] === 'undefined' ) {\n\t\t\tthrow new ReferenceError( `Package metadata must contain \"${ name }\" property.` );\n\t\t}\n\t}\n\n\tfunction checkProperties( ...properties ) {\n\t\tconst isAtLeastOnePresent = properties.some( ( property ) => {\n\t\t\tconst propertyPath = property.split( '/' );\n\n\t\t\treturn checkPropertyExistence( obj, propertyPath );\n\t\t} );\n\n\t\tif ( !isAtLeastOnePresent ) {\n\t\t\tthrow new ReferenceError( `Package metadata must contain one of ${ prepareNamesForError( properties ) } properties or all of them.` );\n\t\t}\n\t}\n\n\tfunction checkPropertyExistence( obj, propertyPath ) {\n\t\tconst currentProperty = propertyPath.shift();\n\n\t\tif ( typeof obj[ currentProperty ] === 'undefined' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( propertyPath.length === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn checkPropertyExistence( obj[ currentProperty ], propertyPath );\n\t}\n\n\tfunction prepareNamesForError( names ) {\n\t\treturn names.map( ( name, i ) => {\n\t\t\tconst formattedName = formatName( name );\n\t\t\tconst quotedName = `\"${ formattedName }\"`;\n\n\t\t\tif ( i === 0 ) {\n\t\t\t\treturn quotedName;\n\t\t\t}\n\n\t\t\tconst conjuction = ( i === names.length - 1 ) ? ' or ' : ', ';\n\n\t\t\treturn `${ conjuction}${ quotedName }`;\n\t\t} ).join( '' );\n\n\t\tfunction formatName( name ) {\n\t\t\t// Thanks to using capturing groups, the separator will be preserved\n\t\t\t// in the splitted string.\n\t\t\tconst separatorRegex = /(\\/)/g;\n\t\t\tconst nameParts = name.split( separatorRegex );\n\n\t\t\treturn nameParts.reduce( ( parts, part ) => {\n\t\t\t\tconst lastPart = parts[ parts.length - 1 ];\n\n\t\t\t\tif ( part.startsWith( '.' ) && lastPart === '.' ) {\n\t\t\t\t\treturn [ ...parts.slice( 0, -1 ), '[ \\'', part ];\n\t\t\t\t}\n\n\t\t\t\tif ( part === '/' && lastPart.startsWith( '.' ) ) {\n\t\t\t\t\treturn [ ...parts, '\\' ].' ];\n\t\t\t\t}\n\n\t\t\t\tif ( part === '/' ) {\n\t\t\t\t\treturn [ ...parts, '.' ];\n\t\t\t\t}\n\n\t\t\t\treturn [ ...parts, part ];\n\t\t\t}, [] ).join( '' );\n\t\t}\n\t}\n}\n\nasync function prepareMetadata( packageDir, metadata ) {\n\treturn {\n\t\tname: metadata.name,\n\t\tversion: metadata.version,\n\t\tauthor: prepareAuthorMetadata( metadata.author ),\n\t\tlicense: metadata.license,\n\t\tdist: await prepareDistMetadata( packageDir, metadata )\n\t};\n}\n\nfunction prepareAuthorMetadata( author ) {\n\tif ( typeof author !== 'object' ) {\n\t\treturn String( author );\n\t}\n\n\treturn author.name;\n}\n\nasync function prepareDistMetadata( packageDir, metadata ) {\n\tconst subpaths = getSubPaths( metadata );\n\tconst exportMetadata = await Promise.all( subpaths.map( ( subPath ) => {\n\t\treturn prepareExportMetadata( packageDir, metadata, subPath );\n\t} ) );\n\n\treturn exportMetadata.reduce( ( targets, currentTargets ) => {\n\t\treturn { ...targets, ...currentTargets };\n\t}, {} );\n}\n\nfunction getSubPaths( metadata ) {\n\tconst exports = metadata.exports;\n\n\tif ( !exports ) {\n\t\treturn [\n\t\t\t'.'\n\t\t];\n\t}\n\n\tconst subpaths = Object.keys( exports ).filter( ( subpath ) => {\n\t\treturn subpath.startsWith( '.' );\n\t} );\n\n\tif ( !subpaths.includes( '.' ) ) {\n\t\tsubpaths.unshift( '.' );\n\t}\n\n\treturn subpaths;\n}\n\nasync function prepareExportMetadata( packageDir, metadata, subPath ) {\n\tconst subPathFilePath = await getSubPathFilePath( packageDir, subPath );\n\tconst srcPath = joinPath( 'src', subPathFilePath );\n\tconst esmTarget = getESMTarget( metadata, subPath );\n\tconst cjsTarget = getCJSTarget( metadata, subPath );\n\tconst exportType = getEntryPointType( srcPath );\n\tconst exportMetadata = {\n\t\tesm: esmTarget,\n\t\ttype: exportType\n\t};\n\n\tif ( cjsTarget ) {\n\t\texportMetadata.cjs = cjsTarget;\n\t}\n\n\tif ( exportType === 'ts' ) {\n\t\tconst typesTarget = getTypesTarget( metadata, subPath );\n\t\tconst tsConfigPath = await getTSConfigPath( packageDir );\n\n\t\tif ( typesTarget ) {\n\t\t\texportMetadata.types = typesTarget;\n\t\t}\n\n\t\tif ( tsConfigPath ) {\n\t\t\texportMetadata.tsConfig = tsConfigPath;\n\t\t}\n\t}\n\n\treturn {\n\t\t[ srcPath ]: exportMetadata\n\t};\n}\n\nasync function getSubPathFilePath( packageDir, subPath ) {\n\tif ( !globby ) {\n\t\tconst globbyModule = await import( 'globby' );\n\t\t// eslint-disable-next-line require-atomic-updates\n\t\tglobby = globbyModule.globby;\n\t}\n\n\tconst srcPath = joinPath( packageDir, 'src' );\n\tconst subPathFileName = subPath === '.' ? 'index' : subPath;\n\tconst subPathGlobPattern = `${ subPathFileName}.{mts,ts,mjs,js,cts,cjs}`;\n\tconst matchedFiles = await globby( subPathGlobPattern, {\n\t\tcwd: srcPath\n\t} );\n\tconst desirableEntryPoint = getEntryPoint( matchedFiles );\n\n\treturn desirableEntryPoint;\n}\n\nfunction getEntryPoint( matchedFiles ) {\n\tconst fileExtensions = [\n\t\t'.mts',\n\t\t'.ts',\n\t\t'.mjs',\n\t\t'.js',\n\t\t'.cts',\n\t\t'.cjs'\n\t];\n\tconst orderedFiles = matchedFiles.sort( ( a, b ) => {\n\t\tconst aIndex = fileExtensions.indexOf( extname( a ) );\n\t\tconst bIndex = fileExtensions.indexOf( extname( b ) );\n\n\t\treturn aIndex - bIndex;\n\t} );\n\n\treturn orderedFiles[ 0 ];\n}\n\nfunction getEntryPointType( srcPath ) {\n\tconst isTS = srcPath.toLowerCase().endsWith( 'ts' );\n\n\treturn isTS ? 'ts' : 'js';\n}\n\nfunction getESMTarget( metadata, subPath ) {\n\tconst exportsTarget = getExportsTarget( metadata, subPath, 'import' );\n\n\tif ( subPath === '.' ) {\n\t\treturn exportsTarget || metadata.module || metadata[ 'jsnext:main' ];\n\t}\n\n\treturn exportsTarget;\n}\n\nfunction getCJSTarget( metadata, subPath ) {\n\tconst exportsTarget = getExportsTarget( metadata, subPath, 'require' );\n\n\tif ( subPath === '.' ) {\n\t\treturn exportsTarget || metadata.main;\n\t}\n\n\treturn exportsTarget;\n}\n\nfunction getTypesTarget( metadata, subPath ) {\n\tconst exportsTarget = getExportsTarget( metadata, subPath, 'types' );\n\n\tif ( subPath === '.' ) {\n\t\treturn exportsTarget || metadata.types;\n\t}\n\n\treturn exportsTarget;\n}\n\nfunction getExportsTarget( metadata, subPath, type ) {\n\tif ( !metadata.exports ) {\n\t\treturn null;\n\t}\n\n\tconst exports = metadata.exports;\n\n\tif ( exports[ subPath ] ) {\n\t\treturn exports[ subPath ][ type ];\n\t}\n\n\tif ( !exports[ subPath ] && subPath === '.' ) {\n\t\treturn exports[ type ];\n\t}\n\n\treturn null;\n}\n\nasync function getTSConfigPath( packageDir ) {\n\tconst tsConfigGlobPattern = 'tsconfig?(.rlb).json';\n\tconst matchedFiles = await globby( tsConfigGlobPattern, {\n\t\tcwd: packageDir\n\t} );\n\n\tif ( matchedFiles.length === 0 ) {\n\t\treturn null;\n\t}\n\n\tconst rlbSpecificPath = matchedFiles.find( ( path ) => {\n\t\treturn path.endsWith( '.rlb.json' );\n\t} );\n\tconst tsConfigPath = rlbSpecificPath || matchedFiles[ 0 ];\n\n\treturn tsConfigPath;\n}\n\nexport default packageParser;\n","import { engines } from '../package.json';\n\nconst node = engines.node.replace( /[<=>~^]/g, '' );\n\nexport { node };\n","import { basename } from 'path';\nimport { dirname } from 'path';\nimport { resolve as resolvePath } from 'path';\nimport { rollup } from 'rollup';\nimport convertCJS from '@rollup/plugin-commonjs';\nimport dts from 'rollup-plugin-dts';\nimport terser from '@rollup/plugin-terser';\nimport json from '@rollup/plugin-json';\nimport babel from '@rollup/plugin-babel';\nimport preset from '@babel/preset-env';\nimport typescript from '@rollup/plugin-typescript';\nimport { rimraf } from 'rimraf';\nimport generateBanner from './generateBanner.js';\nimport { node as nodeTarget } from './targets.js';\n\n/**\n * @type {import('globby').globby}\n */\nlet globby;\n\nasync function bundler( {\n\tonWarn,\n\tpackageInfo\n} ) {\n\tif ( !globby ) {\n\t\tconst globbyModule = await import( 'globby' );\n\t\t// eslint-disable-next-line require-atomic-updates\n\t\tglobby = globbyModule.globby;\n\t}\n\n\tawait Promise.all( bundleChunks( packageInfo, onWarn ) );\n\tawait removeLeftovers( packageInfo );\n}\n\nfunction bundleChunks( packageInfo, onWarn = () => {} ) {\n\tconst distInfo = Object.entries( packageInfo.dist );\n\n\treturn distInfo.map( ( [ source, output ] ) => {\n\t\treturn bundleChunk( packageInfo, source, output, { onWarn } );\n\t} );\n}\n\nasync function bundleChunk( packageInfo, source, output, { onWarn = () => {} } = {} ) {\n\tconst banner = generateBanner( packageInfo );\n\tconst inputConfig = getRollupInputConfig( source, output, onWarn );\n\n\tconst otuputConfigESM = getRollupOutputConfig( output.esm, banner, 'esm' );\n\n\tconst bundle = await rollup( inputConfig );\n\tconst bundlesPromises = [\n\t\tbundle.write( otuputConfigESM )\n\t];\n\n\tif ( output.cjs ) {\n\t\tconst outputConfigCJS = getRollupOutputConfig( output.cjs, banner, 'cjs' );\n\n\t\tbundlesPromises.push( bundle.write( outputConfigCJS ) );\n\t} else {\n\t\tonWarn( `Skipping CJS build for ${ source }` );\n\t}\n\n\tawait Promise.all( bundlesPromises );\n\n\tif ( output.types ) {\n\t\tawait bundleTypes( {\n\t\t\tsourceFile: source,\n\t\t\toutputFile: output.types,\n\t\t\tonWarn\n\t\t} );\n\t}\n}\n\nfunction getRollupInputConfig( input, output, onwarn = () => {} ) {\n\tconst plugins = [\n\t\tconvertCJS(),\n\n\t\tjson(),\n\n\t\t{\n\t\t\trenderDynamicImport() {\n\t\t\t\treturn {\n\t\t\t\t\tleft: 'import(',\n\t\t\t\t\tright: ');'\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\n\t\tbabel( {\n\t\t\tbabelrc: false,\n\t\t\tbabelHelpers: 'bundled',\n\t\t\tpresets: [\n\t\t\t\t[\n\t\t\t\t\tpreset,\n\t\t\t\t\t{\n\t\t\t\t\t\ttargets: {\n\t\t\t\t\t\t\tnode: nodeTarget\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t]\n\t\t} ),\n\n\t\tterser()\n\t];\n\n\t// In case of TypeScript, we need to add the plugin.\n\t// We need to add it before the Babel plugin, so it's at index 2.\n\t// Yep, it's not too elegant…\n\tif ( output.type === 'ts' ) {\n\t\tplugins.splice( 2, 0, typescript( {\n\t\t\ttsconfig: output.tsConfig ? output.tsConfig : false\n\t\t} ) );\n\t}\n\n\treturn {\n\t\tinput,\n\t\tonwarn,\n\t\tplugins\n\t};\n}\n\nfunction getRollupOutputConfig( outputPath, banner, format = 'esm' ) {\n\treturn {\n\t\tbanner,\n\t\tsourcemap: true,\n\t\tformat,\n\t\tfile: outputPath,\n\t\texports: 'auto'\n\t};\n}\n\nasync function bundleTypes( {\n\tsourceFile,\n\toutputFile,\n\tonWarn = () => {}\n} = {} ) {\n\tconst input = getOriginalDTsFilePath();\n\tconst rollupConfig = {\n\t\tinput,\n\t\tplugins: [\n\t\t\tdts()\n\t\t],\n\t\tonwarn: onWarn\n\t};\n\tconst outputConfig = {\n\t\tfile: outputFile,\n\t\tformat: 'es'\n\t};\n\tconst bundle = await rollup( rollupConfig );\n\n\tawait bundle.write( outputConfig );\n\n\tfunction getOriginalDTsFilePath() {\n\t\tconst fileName = basename( sourceFile, '.ts' );\n\t\tconst originalFileName = `${ fileName }.d.ts`;\n\t\tconst declarationDirPath = dirname( outputFile );\n\t\tconst originalFilePath = resolvePath( declarationDirPath, originalFileName );\n\n\t\treturn originalFilePath;\n\t}\n}\n\nasync function removeLeftovers( packageInfo ) {\n\tconst distInfo = Object.entries( packageInfo.dist );\n\tconst allowedDefinitionFiles = distInfo.reduce( ( allowed, [ , output ] ) => {\n\t\tif ( output.types ) {\n\t\t\tallowed.push( output.types );\n\t\t}\n\n\t\treturn allowed;\n\t}, [] );\n\n\tif ( allowedDefinitionFiles.length === 0 ) {\n\t\treturn;\n\t}\n\n\tconst declarationDirPath = dirname( allowedDefinitionFiles[ 0 ] );\n\tconst allDefinitionFiles = await globby( [\n\t\t'**/*.d.ts'\n\t], {\n\t\tcwd: declarationDirPath,\n\t\tabsolute: true\n\t} );\n\tconst definitionFilesToRemove = allDefinitionFiles.filter( ( definitionFile ) => {\n\t\treturn !allowedDefinitionFiles.includes( definitionFile );\n\t} );\n\n\treturn rimraf( definitionFilesToRemove );\n}\n\nexport default bundler;\n","function generateBanner( metadata ) {\n\treturn `/*! ${metadata.name} v${metadata.version} | (c) ${new Date().getFullYear()} ${metadata.author} | ${metadata.license} license (see LICENSE) */`;\n}\n\nexport default generateBanner;\n","/* istanbul ignore file */\nimport { resolve as resolvePath } from 'path';\nimport { rimraf } from 'rimraf';\nimport consoleControlStrings from 'console-control-strings';\nimport OutputController from './OutputController.js';\nimport packageParser from './packageParser.js';\nimport bundler from './bundler.js';\n\nasync function rlb() {\n\tconst outputController = new OutputController();\n\n\ttry {\n\t\tawait outputController.showSpinner();\n\n\t\tconst packageDirectory = process.cwd();\n\t\tconst distPath = resolvePath( packageDirectory, 'dist' );\n\n\t\tawait rimraf( distPath );\n\n\t\tconst packageInfo = await packageParser( packageDirectory );\n\n\t\tawait bundler( {\n\t\t\tonWarn( warning ) {\n\t\t\t\toutputController.addWarning( warning );\n\t\t\t},\n\t\t\tpackageInfo\n\t\t} );\n\n\t\toutputController.addLog( `${ consoleControlStrings.color( [ 'bold', 'green' ] ) }Bundling complete!${ consoleControlStrings.color( 'reset' ) }` );\n\t} catch ( error ) {\n\t\toutputController.displayError( error );\n\t\toutputController.addLog( `${ consoleControlStrings.color( [ 'bold', 'red' ] ) }Bundling failed!${ consoleControlStrings.color( 'reset' ) }` );\n\t} finally {\n\t\tawait outputController.hideSpinner();\n\t\toutputController.display();\n\t}\n}\n\nexport default rlb;\n"],"names":["stdoutSymbol","Symbol","stderrSymbol","spinnerSymbol","OutputController","constructor","stdout","process","stderr","isValidStream","TypeError","this","console","Console","Spinner","label","pendingLogs","pendingWarnings","async","show","hide","addLog","args","push","addWarning","warningMessage","log","code","warning","message","consoleControlStrings","color","createWarning","display","forEach","warn","displayError","error","errorLog","name","stack","stackParts","split","shift","newStack","join","createError","value","WritableStream","DuplexStream","globby","packageParser","packageDir","metadata","dirPath","path","joinPath","existsSync","ReferenceError","contents","readFileSync","parsed","JSON","parse","e","SyntaxError","loadAndParsePackageJSONFile","obj","checkProperty","checkProperties","properties","some","property","propertyPath","checkPropertyExistence","prepareNamesForError","currentProperty","length","names","map","i","quotedName","formatName","separatorRegex","reduce","parts","part","lastPart","startsWith","slice","lintObject","version","author","prepareAuthorMetadata","license","dist","prepareDistMetadata","prepareMetadata","String","subpaths","exports","Object","keys","filter","subpath","includes","unshift","getSubPaths","exportMetadata","Promise","all","subPath","subPathFilePath","globbyModule","import","srcPath","subPathFileName","subPathGlobPattern","matchedFiles","cwd","fileExtensions","orderedFiles","sort","a","b","indexOf","extname","getEntryPoint","getSubPathFilePath","esmTarget","exportsTarget","getExportsTarget","module","getESMTarget","cjsTarget","main","getCJSTarget","exportType","isTS","toLowerCase","endsWith","getEntryPointType","esm","type","cjs","typesTarget","types","getTypesTarget","tsConfigPath","tsConfigGlobPattern","rlbSpecificPath","find","getTSConfigPath","tsConfig","prepareExportMetadata","targets","currentTargets","node","replace","bundler","onWarn","packageInfo","distInfo","entries","source","output","banner","Date","getFullYear","inputConfig","input","onwarn","plugins","convertCJS","json","renderDynamicImport","left","right","babel","babelrc","babelHelpers","presets","preset","nodeTarget","terser","splice","typescript","tsconfig","getRollupInputConfig","otuputConfigESM","getRollupOutputConfig","bundle","rollup","bundlesPromises","write","outputConfigCJS","sourceFile","outputFile","rollupConfig","getOriginalDTsFilePath","dts","outputConfig","file","format","originalFileName","basename","declarationDirPath","dirname","resolvePath","bundleTypes","bundleChunk","bundleChunks","allowedDefinitionFiles","allowed","definitionFilesToRemove","absolute","definitionFile","rimraf","removeLeftovers","outputPath","sourcemap","outputController","showSpinner","packageDirectory","distPath","hideSpinner"],"mappings":"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"}