{"version":3,"file":"rollup-lib-bundler.mjs","sources":["../src/OutputController.js","../src/packageParser.js","../src/bundler/rollupPlugins/fixDTSImportPaths.js","../src/bundler/bundleTypes.js","../src/bundler/rollupPlugins/resolveOtherBundles.js","../src/targets.js","../src/utils/getDirName.js","../src/bundler.js","../src/generateBanner.js","../src/bundler/rollupPlugins/preserveDynamicImports.js","../src/bundler/fixBinPermissions.js","../src/rlb.js","../src/utils/getDistDirPaths.js"],"sourcesContent":["import { Console } from 'node:console';\nimport { Writable as WritableStream } from 'node:stream';\nimport { Duplex as DuplexStream } from 'node:stream';\nimport Spinner from '@comandeer/cli-spinner';\nimport consoleControlStrings from 'console-control-strings';\n\nconst stdoutSymbol = Symbol( 'stdout' );\nconst stderrSymbol = Symbol( 'stderr' );\nconst spinnerSymbol = Symbol( 'spinner' );\n\nclass OutputController {\n\tconstructor( {\n\t\tstdout = process.stdout,\n\t\tstderr = process.stderr\n\t} = {} ) {\n\t\tif ( !isValidStream( stdout ) ) {\n\t\t\tthrow new TypeError( 'Custom stdout must be a valid writable/duplex stream' );\n\t\t}\n\n\t\tif ( !isValidStream( stderr ) ) {\n\t\t\tthrow new TypeError( 'Custom stderr must be a valid writable/duplex stream' );\n\t\t}\n\n\t\tthis[ stdoutSymbol ] = stdout;\n\t\tthis[ stderrSymbol ] = stderr;\n\t\tthis.console = new Console( {\n\t\t\tstdout,\n\t\t\tstderr\n\t\t} );\n\t\tthis[ spinnerSymbol ] = new Spinner( {\n\t\t\tlabel: 'Working…',\n\t\t\tstdout: stderr\n\t\t} );\n\t\tthis.pendingLogs = [];\n\t\tthis.pendingWarnings = [];\n\t}\n\n\tasync showSpinner() {\n\t\treturn this[ spinnerSymbol ].show();\n\t}\n\n\tasync hideSpinner() {\n\t\treturn this[ spinnerSymbol ].hide();\n\t}\n\n\taddLog( ...args ) {\n\t\tthis.pendingLogs.push( args );\n\t}\n\n\taddWarning( warningMessage ) {\n\t\tif ( isExternalDepWarning( warningMessage ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst warning = createWarning( warningMessage );\n\n\t\tthis.pendingWarnings.push( [ warning ] );\n\t}\n\n\tdisplay() {\n\t\tthis.pendingWarnings.forEach( ( warning ) => {\n\t\t\tthis.console.warn( ...warning );\n\t\t} );\n\n\t\tthis.pendingLogs.forEach( ( log ) => {\n\t\t\tthis.console.log( ...log );\n\t\t} );\n\t}\n\n\tdisplayError( error ) {\n\t\tconst errorLog = createError( error );\n\n\t\tthis.console.error( errorLog );\n\t}\n}\n\nfunction isValidStream( value ) {\n\treturn value instanceof WritableStream || value instanceof DuplexStream;\n}\n\nfunction isExternalDepWarning( log ) {\n\treturn log && typeof log === 'object' && log.code === 'UNRESOLVED_IMPORT';\n}\n\nfunction createWarning( warning ) {\n\tif ( warning && typeof warning === 'object' && warning.message ) {\n\t\twarning = warning.message;\n\t}\n\n\treturn `${ consoleControlStrings.color( [ 'yellow', 'bold' ] ) }⚠️ Warning!⚠️ ${ warning }${ consoleControlStrings.color( 'reset' ) }`;\n}\n\nfunction createError( { name, message, stack } ) {\n\tconst stackParts = stack.split( '\\n' );\n\n\tstackParts.shift();\n\n\tconst newStack = stackParts.join( '\\n' );\n\n\treturn `${ consoleControlStrings.color( [ 'bold', 'red' ] ) }🚨Error🚨\n${ name }: ${ message }${ consoleControlStrings.color( 'reset' ) }\n${ newStack }`;\n}\n\nexport default OutputController;\n","import { access } from 'node:fs/promises';\nimport { readFile } from 'node:fs/promises';\nimport { globby } from 'globby';\nimport { extname } from 'pathe';\nimport { join as joinPath } from 'pathe';\nimport { normalize as normalizePath } from 'pathe';\n\nasync function packageParser( packageDir ) {\n\tif ( typeof packageDir !== 'string' ) {\n\t\tthrow new TypeError( 'Provide a path to a package directory.' );\n\t}\n\n\tconst metadata = await loadAndParsePackageJSONFile( packageDir );\n\tlintObject( metadata );\n\n\treturn prepareMetadata( packageDir, metadata );\n}\n\nasync function loadAndParsePackageJSONFile( dirPath ) {\n\tconst path = joinPath( dirPath, 'package.json' );\n\n\ttry {\n\t\tawait access( path );\n\t} catch {\n\t\tthrow new ReferenceError( 'The package.json does not exist in the provided location.' );\n\t}\n\n\tconst contents = await readFile( path, 'utf8' );\n\tlet parsed;\n\n\ttry {\n\t\tparsed = JSON.parse( contents );\n\t} catch ( e ) {\n\t\tthrow new SyntaxError( 'The package.json file is not parsable as a correct JSON.' );\n\t}\n\n\treturn parsed;\n}\n\nfunction lintObject( obj ) {\n\tif ( typeof obj.name === 'undefined' ) {\n\t\tthrow new ReferenceError( 'Package metadata must contain \"name\" property.' );\n\t}\n\n\tif ( typeof obj.version === 'undefined' ) {\n\t\tthrow new ReferenceError( 'Package metadata must contain \"version\" property.' );\n\t}\n\n\tconst isESMEntryPointPresent = typeof obj.exports?.import !== 'undefined' ||\n\t\ttypeof obj.exports?.[ '.' ]?.import !== 'undefined';\n\n\tif ( !isESMEntryPointPresent ) {\n\t\tthrow new ReferenceError(\n\t\t\t'Package metadata must contain one of \"exports[ \\'.\\' ].import\" or \"exports.import\" properties or all of them.'\n\t\t);\n\t}\n\n\tif ( typeof obj.author === 'undefined' ) {\n\t\tthrow new ReferenceError( 'Package metadata must contain \"author\" property.' );\n\t}\n\n\tif ( typeof obj.license === 'undefined' ) {\n\t\tthrow new ReferenceError( 'Package metadata must contain \"license\" property.' );\n\t}\n}\n\nasync function prepareMetadata( packageDir, metadata ) {\n\tconst project = normalizePath( packageDir );\n\n\treturn {\n\t\tproject,\n\t\tname: metadata.name,\n\t\tversion: metadata.version,\n\t\tauthor: prepareAuthorMetadata( metadata.author ),\n\t\tlicense: metadata.license,\n\t\tdist: await prepareDistMetadata( packageDir, metadata )\n\t};\n}\n\nfunction prepareAuthorMetadata( author ) {\n\tif ( typeof author !== 'object' ) {\n\t\treturn String( author );\n\t}\n\n\treturn author.name;\n}\n\nasync function prepareDistMetadata( packageDir, metadata ) {\n\tconst subpaths = getSubPaths( metadata );\n\tconst subPathsMetadata = await Promise.all( subpaths.map( ( subPath ) => {\n\t\treturn prepareSubPathMetadata( packageDir, metadata, subPath );\n\t} ) );\n\tconst distMetadata = [ ...subPathsMetadata ].reduce( ( targets, currentTargets ) => {\n\t\treturn { ...targets, ...currentTargets };\n\t}, {} );\n\n\treturn distMetadata;\n}\n\nfunction getSubPaths( metadata ) {\n\tconst exports = metadata.exports;\n\n\tconst subPaths = Object.keys( exports ).filter( ( subpath ) => {\n\t\treturn subpath.startsWith( '.' );\n\t} );\n\n\tif ( !subPaths.includes( '.' ) ) {\n\t\tsubPaths.unshift( '.' );\n\t}\n\n\tconst binSubPaths = getBinSubPaths( metadata );\n\n\tsubPaths.push( ...binSubPaths );\n\n\treturn subPaths;\n}\n\nfunction getBinSubPaths( { bin, name } ) {\n\tif ( typeof bin === 'undefined' ) {\n\t\treturn [];\n\t}\n\n\tif ( typeof bin === 'string' ) {\n\t\treturn [\n\t\t\t`./__bin__/${ name }`\n\t\t];\n\t}\n\n\tconst binSubPaths = Object.keys( bin ).map( ( bin ) => {\n\t\treturn `./__bin__/${ bin }`;\n\t} );\n\n\treturn binSubPaths;\n}\n\nasync function prepareSubPathMetadata( packageDir, metadata, subPath ) {\n\tconst subPathFilePath = await getSubPathFilePath( packageDir, subPath );\n\tconst srcPath = joinPath( 'src', subPathFilePath );\n\tconst isBin = isBinSubPath( subPath );\n\tconst esmTarget = isBin ?\n\t\tgetBinTarget( metadata, subPath ) :\n\t\tgetESMTarget( metadata, subPath );\n\tconst cjsTarget = getCJSTarget( metadata, subPath );\n\tconst exportType = getEntryPointType( srcPath );\n\tconst exportMetadata = {\n\t\tesm: esmTarget,\n\t\ttype: exportType,\n\t\tisBin\n\t};\n\n\tif ( cjsTarget ) {\n\t\texportMetadata.cjs = cjsTarget;\n\t}\n\n\tif ( exportType === 'ts' ) {\n\t\tconst typesTarget = getTypesTarget( metadata, subPath );\n\t\tconst tsConfigPath = await getTSConfigPath( packageDir );\n\n\t\tif ( typesTarget ) {\n\t\t\texportMetadata.types = typesTarget;\n\t\t}\n\n\t\tif ( tsConfigPath ) {\n\t\t\texportMetadata.tsConfig = tsConfigPath;\n\t\t}\n\t}\n\n\treturn {\n\t\t[ srcPath ]: exportMetadata\n\t};\n}\n\nasync function getSubPathFilePath( packageDir, subPath ) {\n\tconst srcPath = joinPath( packageDir, 'src' );\n\tconst subPathFileName = subPath === '.' ? 'index' : subPath;\n\tconst subPathGlobPattern = `${ subPathFileName}.{mts,ts,mjs,js,cts,cjs}`;\n\tconst matchedFiles = await globby( subPathGlobPattern, {\n\t\tcwd: srcPath\n\t} );\n\tconst desirableEntryPoint = getEntryPoint( matchedFiles );\n\n\treturn desirableEntryPoint;\n}\n\nfunction getEntryPoint( matchedFiles ) {\n\tconst fileExtensions = [\n\t\t'.mts',\n\t\t'.ts',\n\t\t'.mjs',\n\t\t'.js',\n\t\t'.cts',\n\t\t'.cjs'\n\t];\n\tconst orderedFiles = matchedFiles.sort( ( a, b ) => {\n\t\tconst aIndex = fileExtensions.indexOf( extname( a ) );\n\t\tconst bIndex = fileExtensions.indexOf( extname( b ) );\n\n\t\treturn aIndex - bIndex;\n\t} );\n\n\treturn orderedFiles[ 0 ];\n}\n\nfunction getEntryPointType( srcPath ) {\n\tconst isTS = srcPath.toLowerCase().endsWith( 'ts' );\n\n\treturn isTS ? 'ts' : 'js';\n}\n\nfunction isBinSubPath( subPath ) {\n\treturn subPath.startsWith( './__bin__' );\n}\n\nfunction getESMTarget( metadata, subPath ) {\n\tconst exportsTarget = getExportsTarget( metadata, subPath, 'import' );\n\n\treturn exportsTarget;\n}\n\nfunction getBinTarget( { bin, name }, subPath ) {\n\tconst subPathPrefixRegex = /^\\.\\/__bin__\\//g;\n\tconst binName = subPath.replace( subPathPrefixRegex, '' );\n\n\tif ( binName === name && typeof bin === 'string' ) {\n\t\treturn bin;\n\t}\n\n\treturn bin[ binName ];\n}\n\nfunction getCJSTarget( metadata, subPath ) {\n\tconst exportsTarget = getExportsTarget( metadata, subPath, 'require' );\n\n\treturn exportsTarget;\n}\n\nfunction getTypesTarget( metadata, subPath ) {\n\tconst exportsTarget = getExportsTarget( metadata, subPath, 'types' );\n\n\treturn exportsTarget;\n}\n\nfunction getExportsTarget( metadata, subPath, type ) {\n\tconst exports = metadata.exports;\n\n\tif ( exports[ subPath ] ) {\n\t\treturn exports[ subPath ][ type ];\n\t}\n\n\tif ( !exports[ subPath ] && subPath === '.' ) {\n\t\treturn exports[ type ];\n\t}\n}\n\nasync function getTSConfigPath( packageDir ) {\n\tconst tsConfigGlobPattern = 'tsconfig?(.rlb).json';\n\tconst matchedFiles = await globby( tsConfigGlobPattern, {\n\t\tcwd: packageDir\n\t} );\n\n\tif ( matchedFiles.length === 0 ) {\n\t\treturn null;\n\t}\n\n\tconst rlbSpecificPath = matchedFiles.find( ( path ) => {\n\t\treturn path.endsWith( '.rlb.json' );\n\t} );\n\tconst tsConfigPath = rlbSpecificPath || matchedFiles[ 0 ];\n\n\treturn tsConfigPath;\n}\n\nexport default packageParser;\n","import { dirname } from 'pathe';\nimport { join as joinPath } from 'pathe';\nimport { relative as getRelativePath } from 'pathe';\n\nfunction fixDTSImportPaths( distMetadata ) {\n\tconst virtualSrcPrefix = '\\0virtual:src';\n\n\treturn {\n\t\tresolveId( importee, importer ) {\n\t\t\t// Skip the main file.\n\t\t\tif ( !importer ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst importerDir = dirname( importer );\n\t\t\tconst jsExtensionRegex = /\\.(m|c)?js$/;\n\t\t\tconst originalExtension = importee.match( jsExtensionRegex )?.[ 0 ] ?? '';\n\n\t\t\t// We need a file path, with extension here.\n\t\t\t// Due to that we need to:\n\t\t\t// 1. Remove JS extension (in ESM-based projects\n\t\t\t//    TS tends to add it).\n\t\t\t// 2. Add the .d.ts extension.\n\t\t\tif ( !importee.endsWith( '.d.ts' ) ) {\n\t\t\t\timportee = `${ importee.replace( jsExtensionRegex, '' ) }.d.ts`;\n\t\t\t}\n\n\t\t\tconst importeeFullPath = joinPath( importerDir, importee );\n\t\t\tconst distImporteePath = importeeFullPath.replace( virtualSrcPrefix, './dist' );\n\t\t\tconst isBundle = checkIfBundle( distMetadata, distImporteePath );\n\n\t\t\tif ( !isBundle ) {\n\t\t\t\treturn importeeFullPath;\n\t\t\t}\n\n\t\t\tconst distImporterPath = importer.replace( virtualSrcPrefix, './dist' );\n\t\t\tconst distImporterDirectory = dirname( distImporterPath );\n\t\t\tconst importeePathRelativeToImporter = getRelativePath( distImporterDirectory, distImporteePath );\n\n\t\t\t// As TS does not accept the .d.ts extension in import paths, we need to reused the original one.\n\t\t\tconst importeeImportSpecifier = `./${ importeePathRelativeToImporter.\n\t\t\t\treplace( /\\.d\\.ts$/, originalExtension ) }`;\n\n\t\t\treturn {\n\t\t\t\tid: importeeImportSpecifier,\n\t\t\t\texternal: true\n\t\t\t};\n\t\t}\n\t};\n}\n\nfunction checkIfBundle( distMetadata, distPath ) {\n\treturn Object.entries( distMetadata ).some( ( [ , { types } ] ) => {\n\t\treturn types === distPath;\n\t} );\n}\n\nexport default fixDTSImportPaths;\n","import { globby } from 'globby';\nimport { resolve as resolvePath } from 'pathe';\nimport { rollup } from 'rollup';\nimport dts from 'rollup-plugin-dts';\nimport virtual from '@rollup/plugin-virtual';\nimport ts from 'typescript';\nimport fixDTSImportPaths from './rollupPlugins/fixDTSImportPaths.js';\n\nasync function bundleTypes( {\n\tpackageInfo,\n\tsourceFile,\n\toutputFile,\n\ttsConfig,\n\tonWarn = () => {}\n} = {} ) {\n\tconst project = packageInfo.project;\n\tconst userCompilerOptions = getUserCompilerOptions( project, tsConfig );\n\tconst compilerOptions = {\n\t\t...userCompilerOptions,\n\t\tdeclaration: true,\n\t\temitDeclarationOnly: true\n\t};\n\n\t// Remove all options that can change the emitted output.\n\tdelete compilerOptions.outDir;\n\tdelete compilerOptions.declarationDir;\n\tdelete compilerOptions.outFile;\n\tdelete compilerOptions.rootDir;\n\n\tconst tsFiles = await globby( 'src/**/*.{cts,mts,ts}', {\n\t\tabsolute: true,\n\t\tcwd: project\n\t} );\n\tconst emittedFiles = {};\n\n\tconst host = ts.createCompilerHost( compilerOptions );\n\thost.writeFile = ( filePath, contents ) => {\n\t\tconst relativeFilePath = getRelativeToProjectPath( project, filePath );\n\n\t\temittedFiles[ relativeFilePath ] = contents;\n\t};\n\n\t// Prepare and emit the d.ts files\n\tconst program = ts.createProgram( tsFiles, compilerOptions, host );\n\n\tprogram.emit();\n\n\tconst input = getOriginalDTsFilePath( project, sourceFile );\n\tconst rollupConfig = {\n\t\tinput,\n\t\tplugins: [\n\t\t\tfixDTSImportPaths( packageInfo.dist ),\n\n\t\t\tvirtual( emittedFiles ),\n\n\t\t\tdts()\n\t\t],\n\t\tonwarn: onWarn\n\t};\n\tconst outputConfig = {\n\t\tfile: outputFile,\n\t\tformat: 'es'\n\t};\n\tconst bundle = await rollup( rollupConfig );\n\n\tawait bundle.write( outputConfig );\n}\n\nfunction getUserCompilerOptions( project, tsConfig ) {\n\tif ( !tsConfig ) {\n\t\treturn {};\n\t}\n\n\tconst tsConfigFilePath = resolvePath( project, tsConfig );\n\tconst tsConfigContent = ts.readConfigFile( tsConfigFilePath, ts.sys.readFile );\n\tconst parsedOptions = ts.parseJsonConfigFileContent( tsConfigContent.config, ts.sys, project );\n\n\treturn parsedOptions.options;\n}\n\nfunction getOriginalDTsFilePath( project, sourceFile ) {\n\t// We need the relative path to the .d.(c|m)?ts file. So:\n\t// 1. Get the relative path via getRelativePath().\n\t// 2. Replace the .(c|m)?ts extension with the .d.(c|m)?ts one.\n\tconst tsExtensionRegex = /\\.(c|m)?ts$/;\n\tconst originalFilePath = getRelativeToProjectPath( project, sourceFile ).replace( tsExtensionRegex, '.d.$1ts' );\n\n\treturn originalFilePath;\n}\n\nfunction getRelativeToProjectPath( project, filePath ) {\n\t// We need the relative path to the .d.ts file. So:\n\t// 1. Remove the project path.\n\t// 2. Remove the leading slash/backslash.\n\tconst relativeFilePath = filePath.\n\t\treplace( project, '' ).\n\t\treplace( /^[/\\\\]/, '' );\n\n\treturn relativeFilePath;\n}\n\nexport default bundleTypes;\n","import { dirname } from 'pathe';\nimport { relative as getRelativePath } from 'pathe';\nimport { resolve as resolvePath } from 'pathe';\nimport { transformAsync } from '@babel/core';\nimport * as t from '@babel/types';\n\nfunction resolveOtherBundles( projectPath, metadata ) {\n\treturn {\n\t\tname: 'rlb-resolve-other-bundles',\n\n\t\tasync resolveId( importee, importer ) {\n\t\t\tif ( !importee.startsWith( '.' ) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst resolved = await this.resolve( importee, importer, {\n\t\t\t\tskipSelf: true\n\t\t\t} );\n\t\t\tconst srcFullPath = resolved.id;\n\t\t\tconst srcPathRelativeToProject = getRelativePath( projectPath, srcFullPath );\n\t\t\tconst isBundle = typeof metadata[ srcPathRelativeToProject ] !== 'undefined';\n\n\t\t\tif ( !isBundle ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst distPlaceholderPath = `rlb:${ srcPathRelativeToProject }`;\n\n\t\t\treturn {\n\t\t\t\tid: distPlaceholderPath,\n\t\t\t\texternal: true\n\t\t\t};\n\t\t},\n\n\t\tasync renderChunk( code, chunk, { file } ) {\n\t\t\tconst chunkFullPath = resolvePath( projectPath, file );\n\t\t\tconst { code: transformedCode, map } = await transformAsync( code, {\n\t\t\t\tplugins: [\n\t\t\t\t\ttransformImports( projectPath, metadata, chunkFullPath )\n\t\t\t\t]\n\t\t\t} );\n\n\t\t\treturn {\n\t\t\t\tcode: transformedCode,\n\t\t\t\tmap\n\t\t\t};\n\t\t}\n\t};\n}\n\nfunction transformImports( projectPath, metadata, importerFullPath ) {\n\treturn {\n\t\tvisitor: {\n\t\t\tImportDeclaration( path ) {\n\t\t\t\tconst { node } = path;\n\t\t\t\tconst { value: importee } = node.source;\n\n\t\t\t\tif ( !importee.startsWith( 'rlb:' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst importPath = getCorrectImportPath( importee, 'esm' );\n\n\t\t\t\tpath.replaceWith(\n\t\t\t\t\tt.importDeclaration(\n\t\t\t\t\t\tnode.specifiers,\n\t\t\t\t\t\tt.stringLiteral( importPath )\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t},\n\n\t\t\tExportNamedDeclaration( path ) {\n\t\t\t\tconst { node } = path;\n\t\t\t\tconst { source } = node;\n\n\t\t\t\tif ( !source || !source.value.startsWith( 'rlb:' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst importPath = getCorrectImportPath( source.value, 'esm' );\n\n\t\t\t\tpath.replaceWith(\n\t\t\t\t\tt.exportNamedDeclaration(\n\t\t\t\t\t\tnode.declaration,\n\t\t\t\t\t\tnode.specifiers,\n\t\t\t\t\t\tt.stringLiteral( importPath )\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t},\n\n\t\t\tExportAllDeclaration( path ) {\n\t\t\t\tconst { node } = path;\n\t\t\t\tconst { source } = node;\n\n\t\t\t\tif ( !source.value.startsWith( 'rlb:' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst importPath = getCorrectImportPath( source.value, 'esm' );\n\n\t\t\t\tpath.replaceWith(\n\t\t\t\t\tt.exportAllDeclaration(\n\t\t\t\t\t\tt.stringLiteral( importPath )\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t},\n\n\t\t\tCallExpression( path ) {\n\t\t\t\tconst { node } = path;\n\t\t\t\tconst { callee, arguments: args } = node;\n\n\t\t\t\tif ( !t.isIdentifier( callee ) || callee.name !== 'require' ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst [ requiredModuleArg ] = args;\n\n\t\t\t\tif ( !t.isStringLiteral( requiredModuleArg ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst importee = requiredModuleArg.value;\n\n\t\t\t\tif ( !importee.startsWith( 'rlb:' ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst importPath = getCorrectImportPath( importee, 'cjs' );\n\n\t\t\t\tpath.replaceWith(\n\t\t\t\t\tt.callExpression(\n\t\t\t\t\t\tt.identifier( 'require' ),\n\t\t\t\t\t\t[\n\t\t\t\t\t\t\tt.stringLiteral( importPath )\n\t\t\t\t\t\t]\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction getCorrectImportPath( importee, importType ) {\n\t\tconst srcPathRelativeToProject = importee.slice( 4 );\n\t\tconst distPathRelativeToProject = metadata[ srcPathRelativeToProject ][ importType ];\n\t\tconst distFullPath = resolvePath( projectPath, distPathRelativeToProject );\n\t\tconst chunkDirectoryPath = dirname( importerFullPath );\n\t\tconst distPathRelativeToChunk = getRelativePath( chunkDirectoryPath, distFullPath );\n\t\tconst importPath = distPathRelativeToChunk.startsWith( '.' ) ?\n\t\t\tdistPathRelativeToChunk :\n\t\t\t`./${ distPathRelativeToChunk }`;\n\n\t\treturn importPath;\n\t}\n}\n\nexport default resolveOtherBundles;\n","import { readFile } from 'node:fs/promises';\nimport { resolve as resolvePath } from 'pathe';\nimport getDirName from '../src/utils/getDirName.js';\n\nconst __dirname = getDirName( import.meta.url );\nconst packageJSONFilePath = resolvePath( __dirname, '..', 'package.json' );\nconst packageJSONFileContent = await readFile( packageJSONFilePath, 'utf8' );\nconst { engines } = JSON.parse( packageJSONFileContent );\n\nconst node = engines.node.replace( /[<=>~^]/g, '' );\n\nexport { node };\n","import { dirname } from 'pathe';\nimport { fileURLToPath } from 'url';\n\nfunction getDirName( url ) {\n\tconst __dirname = dirname( fileURLToPath( url ) );\n\n\treturn __dirname;\n}\n\nexport default getDirName;\n","import babelImportAssertionsPlugin from '@babel/plugin-syntax-import-assertions';\nimport babelPreset from '@babel/preset-env';\nimport babel from '@rollup/plugin-babel';\nimport convertCJS from '@rollup/plugin-commonjs';\nimport json from '@rollup/plugin-json';\nimport terser from '@rollup/plugin-terser';\nimport typescript from '@rollup/plugin-typescript';\nimport { rollup } from 'rollup';\nimport preserveShebang from 'rollup-plugin-preserve-shebang';\nimport bundleTypes from './bundler/bundleTypes.js';\nimport fixBinPermissions from './bundler/fixBinPermissions.js';\nimport preserveDynamicImports from './bundler/rollupPlugins/preserveDynamicImports.js';\nimport resolveOtherBundles from './bundler/rollupPlugins/resolveOtherBundles.js';\nimport generateBanner from './generateBanner.js';\nimport { node as nodeTarget } from './targets.js';\n\nasync function bundler( {\n\tonWarn,\n\tpackageInfo\n} ) {\n\tawait Promise.all( bundleChunks( packageInfo, onWarn ) );\n}\n\nfunction bundleChunks( packageInfo, onWarn = () => {} ) {\n\tconst distInfo = Object.entries( packageInfo.dist );\n\n\treturn distInfo.map( ( [ source, output ] ) => {\n\t\treturn bundleChunk( packageInfo, source, output, { onWarn } );\n\t} );\n}\n\nasync function bundleChunk( packageInfo, source, output, { onWarn = () => {} } = {} ) {\n\tconst banner = generateBanner( packageInfo );\n\tconst inputConfig = getRollupInputConfig( packageInfo, source, output, onWarn );\n\n\tconst otuputConfigESM = getRollupOutputConfig( output.esm, banner, 'esm' );\n\n\tconst bundle = await rollup( inputConfig );\n\tconst bundlesPromises = [\n\t\tbundle.write( otuputConfigESM )\n\t];\n\n\tif ( output.cjs ) {\n\t\tconst outputConfigCJS = getRollupOutputConfig( output.cjs, banner, 'cjs' );\n\n\t\tbundlesPromises.push( bundle.write( outputConfigCJS ) );\n\t}\n\n\tawait Promise.all( bundlesPromises );\n\n\tif ( output.isBin ) {\n\t\tawait fixBinPermissions( packageInfo.project, output );\n\t}\n\n\tif ( output.types ) {\n\t\tawait bundleTypes( {\n\t\t\tpackageInfo,\n\t\t\tsourceFile: source,\n\t\t\toutputFile: output.types,\n\t\t\ttsConfig: output.tsConfig,\n\t\t\tonWarn\n\t\t} );\n\t}\n}\n\nfunction getRollupInputConfig( packageInfo, input, output, onwarn = () => {} ) {\n\tconst plugins = [\n\t\tconvertCJS(),\n\n\t\tjson(),\n\n\t\tresolveOtherBundles( packageInfo.project, packageInfo.dist ),\n\n\t\tpreserveDynamicImports(),\n\n\t\tbabel( {\n\t\t\tbabelrc: false,\n\t\t\tbabelHelpers: 'bundled',\n\t\t\tplugins: [\n\t\t\t\tbabelImportAssertionsPlugin\n\t\t\t],\n\t\t\tpresets: [\n\t\t\t\t[\n\t\t\t\t\tbabelPreset,\n\t\t\t\t\t{\n\t\t\t\t\t\ttargets: {\n\t\t\t\t\t\t\tnode: nodeTarget\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t],\n\t\t\textensions: [\n\t\t\t\t'.js',\n\t\t\t\t'.mjs',\n\t\t\t\t'.cjs',\n\t\t\t\t'.ts',\n\t\t\t\t'.mts',\n\t\t\t\t'.cts'\n\t\t\t]\n\t\t} ),\n\n\t\tpreserveShebang(),\n\n\t\tterser()\n\t];\n\n\t// In case of TypeScript, we need to add the plugin.\n\t// We need to add it before the Babel plugin\n\t// and after the custom resolver, so it's at index 3.\n\t// Yep, it's not too elegant…\n\tif ( output.type === 'ts' ) {\n\t\tplugins.splice( 3, 0, typescript( {\n\t\t\ttsconfig: output.tsConfig ? output.tsConfig : false,\n\t\t\tdeclaration: false\n\t\t} ) );\n\t}\n\n\treturn {\n\t\tinput,\n\t\tonwarn,\n\t\tplugins\n\t};\n}\n\nfunction getRollupOutputConfig( outputPath, banner, format = 'esm' ) {\n\treturn {\n\t\tbanner,\n\t\tsourcemap: true,\n\t\tformat,\n\t\tfile: outputPath,\n\t\texports: 'auto'\n\t};\n}\n\nexport default bundler;\n","function generateBanner( metadata ) {\n\treturn `/*! ${metadata.name} v${metadata.version} | (c) ${new Date().getFullYear()} ${metadata.author} | ${metadata.license} license (see LICENSE) */`;\n}\n\nexport default generateBanner;\n","function preserveDynamicImports() {\n\treturn {\n\t\trenderDynamicImport() {\n\t\t\treturn {\n\t\t\t\tleft: 'import(',\n\t\t\t\tright: ');'\n\t\t\t};\n\t\t}\n\t};\n}\n\nexport default preserveDynamicImports;\n","import { chmod } from 'node:fs/promises';\nimport { resolve as resolvePath } from 'pathe';\n\nasync function fixBinPermissions( projectPath, { esm } ) {\n\tconst binFilePath = resolvePath( projectPath, esm );\n\n\treturn chmod( binFilePath, '755' );\n}\n\nexport default fixBinPermissions;\n","import { rimraf } from 'rimraf';\nimport consoleControlStrings from 'console-control-strings';\nimport OutputController from './OutputController.js';\nimport packageParser from './packageParser.js';\nimport bundler from './bundler.js';\nimport getDistDirPaths from './utils/getDistDirPaths.js';\n\nasync function rlb() {\n\tconst outputController = new OutputController();\n\n\ttry {\n\t\tawait outputController.showSpinner();\n\n\t\tconst packageDirectory = process.cwd();\n\t\tconst packageInfo = await packageParser( packageDirectory );\n\t\tconst distPaths = getDistDirPaths( packageInfo ).filter( ( distDir ) => {\n\t\t\treturn distDir !== packageInfo.project;\n\t\t} );\n\n\t\tawait rimraf( distPaths );\n\n\t\tawait bundler( {\n\t\t\tonWarn( warning ) {\n\t\t\t\toutputController.addWarning( warning );\n\t\t\t},\n\t\t\tpackageInfo\n\t\t} );\n\n\t\toutputController.addLog( `${ consoleControlStrings.color( [ 'bold', 'green' ] ) }Bundling complete!${ consoleControlStrings.color( 'reset' ) }` );\n\t} catch ( error ) {\n\t\toutputController.displayError( error );\n\t\toutputController.addLog( `${ consoleControlStrings.color( [ 'bold', 'red' ] ) }Bundling failed!${ consoleControlStrings.color( 'reset' ) }` );\n\t} finally {\n\t\tawait outputController.hideSpinner();\n\t\toutputController.display();\n\t}\n}\n\nexport default rlb;\n","import { dirname } from 'pathe';\nimport { resolve as resolvePath } from 'pathe';\n\nfunction getDistDirPaths( { project, dist } ) {\n\tconst distDirPaths = new Set();\n\tconst distFilePaths = Object.values( dist );\n\n\tdistFilePaths.forEach( ( { esm, cjs, types } ) => {\n\t\tconst esmFilePath = resolvePath( project, esm );\n\t\tconst esmDistDirPath = dirname( esmFilePath );\n\n\t\tdistDirPaths.add( esmDistDirPath );\n\n\t\tif ( cjs ) {\n\t\t\tconst cjsFilePath = resolvePath( project, cjs );\n\t\t\tconst cjsDistDirPath = dirname( cjsFilePath );\n\n\t\t\tdistDirPaths.add( cjsDistDirPath );\n\t\t}\n\n\t\tif ( types ) {\n\t\t\tconst typesFilePath = resolvePath( project, types );\n\t\t\tconst typesDistDirPath = dirname( typesFilePath );\n\n\t\t\tdistDirPaths.add( typesDistDirPath );\n\t\t}\n\t} );\n\n\treturn [ ...distDirPaths ];\n}\n\nexport default getDistDirPaths;\n"],"names":["stdoutSymbol","Symbol","stderrSymbol","spinnerSymbol","OutputController","constructor","stdout","process","stderr","isValidStream","TypeError","this","console","Console","Spinner","label","pendingLogs","pendingWarnings","async","show","hide","addLog","args","push","addWarning","warningMessage","log","code","warning","message","consoleControlStrings","color","createWarning","display","forEach","warn","displayError","error","errorLog","name","stack","stackParts","split","shift","newStack","join","createError","value","WritableStream","DuplexStream","packageParser","packageDir","metadata","dirPath","path","joinPath","access","ReferenceError","contents","readFile","parsed","JSON","parse","e","SyntaxError","loadAndParsePackageJSONFile","obj","_obj$exports","_obj$exports2","_obj$exports2$","version","exports","import","author","license","lintObject","project","normalizePath","prepareAuthorMetadata","dist","prepareDistMetadata","prepareMetadata","String","subpaths","subPaths","Object","keys","filter","subpath","startsWith","includes","unshift","binSubPaths","bin","map","getBinSubPaths","getSubPaths","subPathsMetadata","Promise","all","subPath","subPathFilePath","srcPath","subPathFileName","subPathGlobPattern","matchedFiles","globby","cwd","fileExtensions","orderedFiles","sort","a","b","indexOf","extname","getEntryPoint","getSubPathFilePath","isBin","isBinSubPath","esmTarget","subPathPrefixRegex","binName","replace","getBinTarget","exportsTarget","getExportsTarget","getESMTarget","cjsTarget","getCJSTarget","exportType","isTS","toLowerCase","endsWith","getEntryPointType","exportMetadata","esm","type","cjs","typesTarget","getTypesTarget","tsConfigPath","tsConfigGlobPattern","length","find","getTSConfigPath","types","tsConfig","prepareSubPathMetadata","reduce","targets","currentTargets","fixDTSImportPaths","distMetadata","virtualSrcPrefix","resolveId","importee","importer","_importee$match","importerDir","dirname","jsExtensionRegex","originalExtension","match","importeeFullPath","distImporteePath","isBundle","distPath","entries","some","checkIfBundle","distImporterPath","distImporterDirectory","id","getRelativePath","external","bundleTypes","packageInfo","sourceFile","outputFile","onWarn","userCompilerOptions","tsConfigFilePath","resolvePath","tsConfigContent","ts","readConfigFile","sys","parsedOptions","parseJsonConfigFileContent","config","options","getUserCompilerOptions","compilerOptions","declaration","emitDeclarationOnly","outDir","declarationDir","outFile","rootDir","tsFiles","absolute","emittedFiles","host","createCompilerHost","writeFile","filePath","relativeFilePath","getRelativeToProjectPath","createProgram","emit","input","tsExtensionRegex","originalFilePath","getOriginalDTsFilePath","rollupConfig","plugins","virtual","dts","onwarn","outputConfig","file","format","bundle","rollup","write","resolveOtherBundles","projectPath","srcFullPath","resolve","skipSelf","srcPathRelativeToProject","chunk","chunkFullPath","transformedCode","transformAsync","transformImports","importerFullPath","visitor","ImportDeclaration","node","source","importPath","getCorrectImportPath","replaceWith","t","importDeclaration","specifiers","stringLiteral","ExportNamedDeclaration","exportNamedDeclaration","ExportAllDeclaration","exportAllDeclaration","CallExpression","callee","arguments","isIdentifier","requiredModuleArg","isStringLiteral","callExpression","identifier","importType","slice","distPathRelativeToProject","distFullPath","chunkDirectoryPath","distPathRelativeToChunk","__dirname","url","meta","fileURLToPath","packageJSONFilePath","packageJSONFileContent","engines","bundler","distInfo","output","banner","Date","getFullYear","inputConfig","convertCJS","json","renderDynamicImport","left","right","babel","babelrc","babelHelpers","babelImportAssertionsPlugin","presets","babelPreset","nodeTarget","extensions","preserveShebang","terser","splice","typescript","tsconfig","getRollupInputConfig","otuputConfigESM","getRollupOutputConfig","bundlesPromises","outputConfigCJS","binFilePath","chmod","fixBinPermissions","bundleChunk","bundleChunks","outputPath","sourcemap","rlb","outputController","showSpinner","packageDirectory","distPaths","distDirPaths","Set","values","esmFilePath","esmDistDirPath","add","cjsFilePath","cjsDistDirPath","typesFilePath","typesDistDirPath","getDistDirPaths","distDir","rimraf","hideSpinner"],"mappings":"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"}