{"version":3,"file":"rollup-lib-bundler.es2015.js","sources":["../src/packageParser.js","../src/targets.js","../src/bundler.js","../src/generateBanner.js","../src/index.js"],"sourcesContent":["import { existsSync } from 'fs';\nimport { readFileSync } from 'fs';\n\nfunction packageParser( metadata ) {\n\tif ( typeof metadata === 'string' ) {\n\t\tmetadata = loadAndParseFile( metadata );\n\t} else if ( typeof metadata !== 'object' ) {\n\t\tthrow new TypeError( 'Provide string or object.' );\n\t}\n\n\tlintObject( metadata );\n\n\treturn prepareMetadata( metadata );\n}\n\nfunction loadAndParseFile( path ) {\n\tif ( !existsSync( path ) ) {\n\t\tthrow new ReferenceError( 'File with given path does not exist.' );\n\t}\n\n\tconst contents = readFileSync( path, 'utf8' );\n\tlet parsed;\n\n\ttry {\n\t\tparsed = JSON.parse( contents );\n\t} catch ( e ) {\n\t\tthrow new SyntaxError( 'Given file is not parsable as a correct JSON.' );\n\t}\n\n\treturn parsed;\n}\n\nfunction lintObject( obj ) {\n\tcheckProperty( 'name' );\n\tcheckProperty( 'version' );\n\tcheckProperties( 'exports.require', 'main' );\n\tcheckProperties( 'exports.import', 'module', 'jsnext:main' );\n\tcheckProperty( 'author' );\n\tcheckProperty( 'license' );\n\n\tfunction checkProperty( name ) {\n\t\tif ( typeof obj[ name ] === 'undefined' ) {\n\t\t\tthrow new ReferenceError( `Package metadata must contain \"${ name }\" property.` );\n\t\t}\n\t}\n\n\tfunction checkProperties( ...properties ) {\n\t\tconst isAtLeastOnePresent = properties.some( ( property ) => {\n\t\t\tconst propertyPath = property.split( '.' );\n\n\t\t\treturn checkPropertyExistence( obj, propertyPath );\n\t\t} );\n\n\t\tif ( !isAtLeastOnePresent ) {\n\t\t\tthrow new ReferenceError( `Package metadata must contain one of ${ prepareNamesForError( properties ) } properties or all of them.` );\n\t\t}\n\t}\n\n\tfunction checkPropertyExistence( obj, propertyPath ) {\n\t\tconst currentProperty = propertyPath.shift();\n\n\t\tif ( typeof obj[ currentProperty ] === 'undefined' ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( propertyPath.length === 0 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn checkPropertyExistence( obj[ currentProperty ], propertyPath );\n\t}\n\n\tfunction prepareNamesForError( names ) {\n\t\treturn names.map( ( name, i ) => {\n\t\t\tconst quotedName = `\"${ name }\"`;\n\n\t\t\tif ( i === 0 ) {\n\t\t\t\treturn quotedName;\n\t\t\t}\n\n\t\t\tconst conjuction = ( i === names.length - 1 ) ? ' or ' : ', ';\n\n\t\t\treturn `${ conjuction}${ quotedName }`;\n\t\t} ).join( '' );\n\t}\n}\n\nfunction prepareMetadata( obj ) {\n\treturn {\n\t\tname: obj.name,\n\t\tversion: obj.version,\n\t\tauthor: prepareAuthorMetadata( obj.author ),\n\t\tlicense: obj.license,\n\t\tsrc: 'src/index.js',\n\t\tdist: {\n\t\t\tesm: getESMTarget( obj ),\n\t\t\tcjs: getCJSTarget( obj )\n\t\t}\n\t};\n}\n\nfunction prepareAuthorMetadata( author ) {\n\tif ( typeof author !== 'object' ) {\n\t\treturn String( author );\n\t}\n\n\treturn author.name;\n}\n\nfunction getESMTarget( obj ) {\n\tif ( obj.exports && obj.exports.import ) {\n\t\treturn obj.exports.import;\n\t}\n\n\treturn obj.module || obj[ 'jsnext:main' ];\n}\n\nfunction getCJSTarget( obj ) {\n\tif ( obj.exports && obj.exports.require ) {\n\t\treturn obj.exports.require;\n\t}\n\n\treturn obj.main;\n}\n\nexport default packageParser;\n","import { engines } from '../package.json';\n\nconst node = engines.node.replace( /[<=>~^]/g, '' );\n\nexport { node };\n","import { rollup } from 'rollup';\nimport convertCJS from '@rollup/plugin-commonjs';\nimport { terser } from 'rollup-plugin-terser';\nimport json from '@rollup/plugin-json';\nimport babel from '@rollup/plugin-babel';\nimport preset from '@babel/preset-env';\nimport generateBanner from './generateBanner.js';\nimport { node as nodeTarget } from './targets.js';\n\nasync function bundler( metadata ) {\n\tconst configCJS = getRollupConfig( metadata, true );\n\tconst configESM = getRollupConfig( metadata, false );\n\n\tconst bundles = await Promise.all( [\n\t\trollup( configCJS ),\n\t\trollup( configESM )\n\t] );\n\n\treturn Promise.all( [\n\t\tbundles[ 0 ].write( configCJS.output ),\n\t\tbundles[ 1 ].write( configESM.output )\n\t] );\n}\n\nfunction getRollupConfig( metadata, isCJS ) {\n\tconst banner = generateBanner( metadata );\n\tconst plugins = [\n\t\tconvertCJS(),\n\n\t\tjson(),\n\n\t\tbabel( {\n\t\t\tbabelrc: false,\n\t\t\tbabelHelpers: 'bundled',\n\t\t\tpresets: [\n\t\t\t\t[\n\t\t\t\t\tpreset,\n\t\t\t\t\t{\n\t\t\t\t\t\ttargets: {\n\t\t\t\t\t\t\tnode: nodeTarget\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t]\n\t\t} ),\n\n\t\tterser()\n\t];\n\n\treturn {\n\t\tinput: metadata.src,\n\t\tplugins,\n\t\toutput: {\n\t\t\tbanner,\n\t\t\tsourcemap: true,\n\t\t\tformat: isCJS ? 'cjs' : 'es',\n\t\t\tfile: isCJS ? metadata.dist.cjs : metadata.dist.esm,\n\t\t\texports: 'auto'\n\t\t}\n\t};\n}\n\nexport default bundler;\n","function generateBanner( metadata ) {\n\treturn `/*! ${metadata.name} v${metadata.version} | (c) ${new Date().getFullYear()} ${metadata.author} | ${metadata.license} license (see LICENSE) */`;\n}\n\nexport default generateBanner;\n","import packageParser from './packageParser.js';\nimport bundler from './bundler.js';\n\nfunction rlb() {\n\tconst metadata = packageParser( 'package.json' );\n\n\treturn bundler( metadata );\n}\n\nexport default rlb;\n"],"names":["packageParser","metadata","path","existsSync","ReferenceError","contents","readFileSync","parsed","JSON","parse","e","SyntaxError","loadAndParseFile","TypeError","obj","checkProperty","name","checkProperties","properties","some","property","propertyPath","split","checkPropertyExistence","prepareNamesForError","currentProperty","shift","length","names","map","i","quotedName","join","lintObject","version","author","prepareAuthorMetadata","license","src","dist","esm","getESMTarget","cjs","getCJSTarget","String","exports","import","module","require","main","node","replace","getRollupConfig","isCJS","banner","Date","getFullYear","generateBanner","plugins","convertCJS","json","babel","babelrc","babelHelpers","presets","preset","targets","nodeTarget","terser","input","output","sourcemap","format","file","rlb","async","configCJS","configESM","bundles","Promise","all","rollup","write","bundler"],"mappings":";+QAGA,SAASA,EAAeC,MACE,iBAAbA,EACXA,EAUF,SAA2BC,OACpBC,EAAYD,SACX,IAAIE,eAAgB,8CAGrBC,EAAWC,EAAcJ,EAAM,YACjCK,MAGHA,EAASC,KAAKC,MAAOJ,GACpB,MAAQK,SACH,IAAIC,YAAa,wDAGjBJ,EAxBKK,CAAkBX,QACvB,GAAyB,iBAAbA,QACZ,IAAIY,UAAW,oCAyBvB,SAAqBC,YAQXC,EAAeC,WACK,IAAhBF,EAAKE,SACV,IAAIZ,eAAiB,kCAAkCY,yBAItDC,KAAoBC,OACAA,EAAWC,MAAQC,UACxCC,EAAeD,EAASE,MAAO,YAE9BC,EAAwBT,EAAKO,YAI9B,IAAIjB,eAAiB,wCAAwCoB,EAAsBN,0CAIlFK,EAAwBT,EAAKO,SAC/BI,EAAkBJ,EAAaK,oBAEE,IAA3BZ,EAAKW,KAIY,IAAxBJ,EAAaM,QAIXJ,EAAwBT,EAAKW,GAAmBJ,aAG/CG,EAAsBI,UACvBA,EAAMC,KAAK,CAAEb,EAAMc,WACnBC,EAAc,IAAIf,QAEb,IAANc,SACGC,QAKA,GAFaD,IAAMF,EAAMD,OAAS,EAAM,OAAS,OAEhCI,OACtBC,KAAM,IAlDXjB,EAAe,QACfA,EAAe,WACfE,EAAiB,kBAAmB,QACpCA,EAAiB,iBAAkB,SAAU,eAC7CF,EAAe,UACfA,EAAe,WA5BfkB,CAAYhC,GA8EL,CACNe,MAFwBF,EA3EDb,GA6Ebe,KACVkB,QAASpB,EAAIoB,QACbC,OAAQC,EAAuBtB,EAAIqB,QACnCE,QAASvB,EAAIuB,QACbC,IAAK,eACLC,KAAM,CACLC,IAAKC,EAAc3B,GACnB4B,IAAKC,EAAc7B,KATtB,IAA0BA,EAc1B,SAASsB,EAAuBD,SACR,iBAAXA,EACJS,OAAQT,GAGTA,EAAOnB,KAGf,SAASyB,EAAc3B,UACjBA,EAAI+B,SAAW/B,EAAI+B,QAAQC,OACxBhC,EAAI+B,QAAQC,OAGbhC,EAAIiC,QAAUjC,EAAK,eAG3B,SAAS6B,EAAc7B,UACjBA,EAAI+B,SAAW/B,EAAI+B,QAAQG,QACxBlC,EAAI+B,QAAQG,QAGblC,EAAImC,KCxHZ,MAAMC,aAAoBC,QAAS,WAAY,ICsB/C,SAASC,EAAiBnD,EAAUoD,SAC7BC,ECzBP,SAAyBrD,SAChB,OAAMA,EAASe,SAASf,EAASiC,kBAAiB,IAAIqB,MAAOC,iBAAiBvD,EAASkC,YAAYlC,EAASoC,mCDwBrGoB,CAAgBxD,GACzByD,EAAU,CACfC,IAEAC,IAEAC,EAAO,CACNC,SAAS,EACTC,aAAc,UACdC,QAAS,CACR,CACCC,EACA,CACCC,QAAS,CACRhB,KAAMiB,QAOXC,WAGM,CACNC,MAAOpE,EAASqC,IAChBoB,QAAAA,EACAY,OAAQ,CACPhB,OAAAA,EACAiB,WAAW,EACXC,OAAQnB,EAAQ,MAAQ,KACxBoB,KAAMpB,EAAQpD,EAASsC,KAAKG,IAAMzC,EAASsC,KAAKC,IAChDK,QAAS,SEtDZ,SAAS6B,WFMTC,eAAwB1E,SACjB2E,EAAYxB,EAAiBnD,GAAU,GACvC4E,EAAYzB,EAAiBnD,GAAU,GAEvC6E,QAAgBC,QAAQC,IAAK,CAClCC,EAAQL,GACRK,EAAQJ,YAGFE,QAAQC,IAAK,CACnBF,EAAS,GAAII,MAAON,EAAUN,QAC9BQ,EAAS,GAAII,MAAOL,EAAUP,UEdxBa,CAFUnF,EAAe"}