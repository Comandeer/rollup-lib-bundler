{"version":3,"file":"rollup-lib-bundler.es2015.js","sources":["../src/OutputController.js","../src/packageParser.js","../src/targets.js","../src/bundler.js","../src/generateBanner.js","../src/rlb.js"],"sourcesContent":["import { Console } from 'node:console';\nimport { Writable as WritableStream } from 'node:stream';\nimport { Duplex as DuplexStream } from 'node:stream';\nimport Spinner from '@comandeer/cli-spinner';\nimport consoleControlStrings from 'console-control-strings';\n\nconst stdoutSymbol = Symbol( 'stdout' );\nconst stderrSymbol = Symbol( 'stderr' );\nconst spinnerSymbol = Symbol( 'spinner' );\n\nclass OutputController {\n\tconstructor( {\n\t\tstdout = process.stdout,\n\t\tstderr = process.stderr\n\t} = {} ) {\n\t\tif ( !isValidStream( stdout ) ) {\n\t\t\tthrow new TypeError( 'Custom stdout must be a valid writable/duplex stream' );\n\t\t}\n\n\t\tif ( !isValidStream( stderr ) ) {\n\t\t\tthrow new TypeError( 'Custom stderr must be a valid writable/duplex stream' );\n\t\t}\n\n\t\tthis[ stdoutSymbol ] = stdout;\n\t\tthis[ stderrSymbol ] = stderr;\n\t\tthis.console = new Console( {\n\t\t\tstdout,\n\t\t\tstderr\n\t\t} );\n\t\tthis[ spinnerSymbol ] = new Spinner( {\n\t\t\tlabel: 'Working…',\n\t\t\tstdout: stderr\n\t\t} );\n\t\tthis.pendingLogs = [];\n\t\tthis.pendingWarnings = [];\n\t}\n\n\t/* istanbul ignore next */\n\tasync showSpinner() {\n\t\treturn this[ spinnerSymbol ].show();\n\t}\n\n\t/* istanbul ignore next */\n\tasync hideSpinner() {\n\t\treturn this[ spinnerSymbol ].hide();\n\t}\n\n\taddLog( ...args ) {\n\t\tthis.pendingLogs.push( args );\n\t}\n\n\taddWarning( warningMessage ) {\n\t\tif ( isExternalDepWarning( warningMessage ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst warning = createWarning( warningMessage );\n\n\t\tthis.pendingWarnings.push( [ warning ] );\n\t}\n\n\tdisplay() {\n\t\tthis.pendingWarnings.forEach( ( warning ) => {\n\t\t\tthis.console.warn( ...warning );\n\t\t} );\n\n\t\tthis.pendingLogs.forEach( ( log ) => {\n\t\t\tthis.console.log( ...log );\n\t\t} );\n\t}\n\n\tdisplayError( error ) {\n\t\tconst errorLog = createError( error );\n\n\t\tthis.console.error( errorLog );\n\t}\n}\n\nfunction isValidStream( value ) {\n\treturn value instanceof WritableStream || value instanceof DuplexStream;\n}\n\nfunction isExternalDepWarning( log ) {\n\treturn log && typeof log === 'object' && log.code === 'UNRESOLVED_IMPORT';\n}\n\nfunction createWarning( warning ) {\n\tif ( warning && typeof warning === 'object' && warning.message ) {\n\t\twarning = warning.message;\n\t}\n\n\treturn `${ consoleControlStrings.color( [ 'yellow', 'bold' ] ) }⚠️ Warning!⚠️ ${ warning }${ consoleControlStrings.color( 'reset' ) }`;\n}\n\nfunction createError( { name, message, stack } ) {\n\tconst stackParts = stack.split( '\\n' );\n\n\tstackParts.shift();\n\n\tconst newStack = stackParts.join( '\\n' );\n\n\treturn `${ consoleControlStrings.color( [ 'bold', 'red' ] ) }🚨Error🚨\n${ name }: ${ message }${ consoleControlStrings.color( 'reset' ) }\n${ newStack }`;\n}\n\nexport default OutputController;\n","import { access } from 'node:fs/promises';\nimport { readFile } from 'node:fs/promises';\nimport { extname } from 'node:path';\nimport { join as joinPath } from 'node:path';\n\nlet globby;\n\nasync function packageParser( packageDir ) {\n\tif ( typeof packageDir !== 'string' ) {\n\t\tthrow new TypeError( 'Provide a path to a package directory.' );\n\t}\n\n\tconst metadata = await loadAndParsePackageJSONFile( packageDir );\n\tlintObject( metadata );\n\n\treturn prepareMetadata( packageDir, metadata );\n}\n\nasync function loadAndParsePackageJSONFile( dirPath ) {\n\tconst path = joinPath( dirPath, 'package.json' );\n\n\ttry {\n\t\tawait access( path );\n\t} catch {\n\t\tthrow new ReferenceError( 'The package.json does not exist in the provided location.' );\n\t}\n\n\tconst contents = await readFile( path, 'utf8' );\n\tlet parsed;\n\n\ttry {\n\t\tparsed = JSON.parse( contents );\n\t} catch ( e ) {\n\t\tthrow new SyntaxError( 'The package.json file is not parsable as a correct JSON.' );\n\t}\n\n\treturn parsed;\n}\n\nfunction lintObject( obj ) {\n\tif ( typeof obj.name === 'undefined' ) {\n\t\tthrow new ReferenceError( 'Package metadata must contain \"name\" property.' );\n\t}\n\n\tif ( typeof obj.version === 'undefined' ) {\n\t\tthrow new ReferenceError( 'Package metadata must contain \"version\" property.' );\n\t}\n\n\tconst isESMEntryPointPresent = typeof obj.exports?.import !== 'undefined' ||\n\t\ttypeof obj.exports?.[ '.' ]?.import !== 'undefined';\n\n\tif ( !isESMEntryPointPresent ) {\n\t\tthrow new ReferenceError(\n\t\t\t'Package metadata must contain one of \"exports[ \\'.\\' ].import\" or \"exports.import\" properties or all of them.'\n\t\t);\n\t}\n\n\tif ( typeof obj.author === 'undefined' ) {\n\t\tthrow new ReferenceError( 'Package metadata must contain \"author\" property.' );\n\t}\n\n\tif ( typeof obj.license === 'undefined' ) {\n\t\tthrow new ReferenceError( 'Package metadata must contain \"license\" property.' );\n\t}\n}\n\nasync function prepareMetadata( packageDir, metadata ) {\n\treturn {\n\t\tproject: packageDir,\n\t\tname: metadata.name,\n\t\tversion: metadata.version,\n\t\tauthor: prepareAuthorMetadata( metadata.author ),\n\t\tlicense: metadata.license,\n\t\tdist: await prepareDistMetadata( packageDir, metadata )\n\t};\n}\n\nfunction prepareAuthorMetadata( author ) {\n\tif ( typeof author !== 'object' ) {\n\t\treturn String( author );\n\t}\n\n\treturn author.name;\n}\n\nasync function prepareDistMetadata( packageDir, metadata ) {\n\tconst subpaths = getSubPaths( metadata );\n\tconst exportMetadata = await Promise.all( subpaths.map( ( subPath ) => {\n\t\treturn prepareExportMetadata( packageDir, metadata, subPath );\n\t} ) );\n\n\treturn exportMetadata.reduce( ( targets, currentTargets ) => {\n\t\treturn { ...targets, ...currentTargets };\n\t}, {} );\n}\n\nfunction getSubPaths( metadata ) {\n\tconst exports = metadata.exports;\n\n\tconst subpaths = Object.keys( exports ).filter( ( subpath ) => {\n\t\treturn subpath.startsWith( '.' );\n\t} );\n\n\tif ( !subpaths.includes( '.' ) ) {\n\t\tsubpaths.unshift( '.' );\n\t}\n\n\treturn subpaths;\n}\n\nasync function prepareExportMetadata( packageDir, metadata, subPath ) {\n\tconst subPathFilePath = await getSubPathFilePath( packageDir, subPath );\n\tconst srcPath = joinPath( 'src', subPathFilePath );\n\tconst esmTarget = getESMTarget( metadata, subPath );\n\tconst cjsTarget = getCJSTarget( metadata, subPath );\n\tconst exportType = getEntryPointType( srcPath );\n\tconst exportMetadata = {\n\t\tesm: esmTarget,\n\t\ttype: exportType\n\t};\n\n\tif ( cjsTarget ) {\n\t\texportMetadata.cjs = cjsTarget;\n\t}\n\n\tif ( exportType === 'ts' ) {\n\t\tconst typesTarget = getTypesTarget( metadata, subPath );\n\t\tconst tsConfigPath = await getTSConfigPath( packageDir );\n\n\t\tif ( typesTarget ) {\n\t\t\texportMetadata.types = typesTarget;\n\t\t}\n\n\t\tif ( tsConfigPath ) {\n\t\t\texportMetadata.tsConfig = tsConfigPath;\n\t\t}\n\t}\n\n\treturn {\n\t\t[ srcPath ]: exportMetadata\n\t};\n}\n\nasync function getSubPathFilePath( packageDir, subPath ) {\n\tif ( !globby ) {\n\t\tconst globbyModule = await import( 'globby' );\n\t\t// eslint-disable-next-line require-atomic-updates\n\t\tglobby = globbyModule.globby;\n\t}\n\n\tconst srcPath = joinPath( packageDir, 'src' );\n\tconst subPathFileName = subPath === '.' ? 'index' : subPath;\n\tconst subPathGlobPattern = `${ subPathFileName}.{mts,ts,mjs,js,cts,cjs}`;\n\tconst matchedFiles = await globby( subPathGlobPattern, {\n\t\tcwd: srcPath\n\t} );\n\tconst desirableEntryPoint = getEntryPoint( matchedFiles );\n\n\treturn desirableEntryPoint;\n}\n\nfunction getEntryPoint( matchedFiles ) {\n\tconst fileExtensions = [\n\t\t'.mts',\n\t\t'.ts',\n\t\t'.mjs',\n\t\t'.js',\n\t\t'.cts',\n\t\t'.cjs'\n\t];\n\tconst orderedFiles = matchedFiles.sort( ( a, b ) => {\n\t\tconst aIndex = fileExtensions.indexOf( extname( a ) );\n\t\tconst bIndex = fileExtensions.indexOf( extname( b ) );\n\n\t\treturn aIndex - bIndex;\n\t} );\n\n\treturn orderedFiles[ 0 ];\n}\n\nfunction getEntryPointType( srcPath ) {\n\tconst isTS = srcPath.toLowerCase().endsWith( 'ts' );\n\n\treturn isTS ? 'ts' : 'js';\n}\n\nfunction getESMTarget( metadata, subPath ) {\n\tconst exportsTarget = getExportsTarget( metadata, subPath, 'import' );\n\n\treturn exportsTarget;\n}\n\nfunction getCJSTarget( metadata, subPath ) {\n\tconst exportsTarget = getExportsTarget( metadata, subPath, 'require' );\n\n\treturn exportsTarget;\n}\n\nfunction getTypesTarget( metadata, subPath ) {\n\tconst exportsTarget = getExportsTarget( metadata, subPath, 'types' );\n\n\treturn exportsTarget;\n}\n\nfunction getExportsTarget( metadata, subPath, type ) {\n\tconst exports = metadata.exports;\n\n\tif ( exports[ subPath ] ) {\n\t\treturn exports[ subPath ][ type ];\n\t}\n\n\tif ( !exports[ subPath ] && subPath === '.' ) {\n\t\treturn exports[ type ];\n\t}\n\n\treturn null;\n}\n\nasync function getTSConfigPath( packageDir ) {\n\tconst tsConfigGlobPattern = 'tsconfig?(.rlb).json';\n\tconst matchedFiles = await globby( tsConfigGlobPattern, {\n\t\tcwd: packageDir\n\t} );\n\n\tif ( matchedFiles.length === 0 ) {\n\t\treturn null;\n\t}\n\n\tconst rlbSpecificPath = matchedFiles.find( ( path ) => {\n\t\treturn path.endsWith( '.rlb.json' );\n\t} );\n\tconst tsConfigPath = rlbSpecificPath || matchedFiles[ 0 ];\n\n\treturn tsConfigPath;\n}\n\nexport default packageParser;\n","import { engines } from '../package.json';\n\nconst node = engines.node.replace( /[<=>~^]/g, '' );\n\nexport { node };\n","import { mkdir } from 'node:fs/promises';\nimport { writeFile } from 'node:fs/promises';\nimport { dirname } from 'node:path';\nimport { normalize as normalizePath } from 'node:path';\nimport { resolve as resolvePath } from 'node:path';\nimport { rollup } from 'rollup';\nimport convertCJS from '@rollup/plugin-commonjs';\nimport dts from 'rollup-plugin-dts';\nimport terser from '@rollup/plugin-terser';\nimport json from '@rollup/plugin-json';\nimport babel from '@rollup/plugin-babel';\nimport preset from '@babel/preset-env';\nimport typescript from '@rollup/plugin-typescript';\nimport ts from 'typescript';\nimport generateBanner from './generateBanner.js';\nimport { node as nodeTarget } from './targets.js';\n\n/**\n * @type {import('globby').globby}\n */\nlet globby;\n\n/**\n * @type {import('tempy').temporaryDirectoryTask}\n */\nlet temporaryDirectoryTask;\n\nasync function bundler( {\n\tonWarn,\n\tpackageInfo\n} ) {\n\tif ( !globby ) {\n\t\tconst globbyModule = await import( 'globby' );\n\t\t// eslint-disable-next-line require-atomic-updates\n\t\tglobby = globbyModule.globby;\n\t}\n\n\tif ( !temporaryDirectoryTask ) {\n\t\tconst tempyModule = await import( 'tempy' );\n\t\t// eslint-disable-next-line require-atomic-updates\n\t\ttemporaryDirectoryTask = tempyModule.temporaryDirectoryTask;\n\t}\n\n\tawait Promise.all( bundleChunks( packageInfo, onWarn ) );\n}\n\nfunction bundleChunks( packageInfo, onWarn = () => {} ) {\n\tconst distInfo = Object.entries( packageInfo.dist );\n\n\treturn distInfo.map( ( [ source, output ] ) => {\n\t\treturn bundleChunk( packageInfo, source, output, { onWarn } );\n\t} );\n}\n\nasync function bundleChunk( packageInfo, source, output, { onWarn = () => {} } = {} ) {\n\tconst banner = generateBanner( packageInfo );\n\tconst inputConfig = getRollupInputConfig( source, output, onWarn );\n\n\tconst otuputConfigESM = getRollupOutputConfig( output.esm, banner, 'esm' );\n\n\tconst bundle = await rollup( inputConfig );\n\tconst bundlesPromises = [\n\t\tbundle.write( otuputConfigESM )\n\t];\n\n\tif ( output.cjs ) {\n\t\tconst outputConfigCJS = getRollupOutputConfig( output.cjs, banner, 'cjs' );\n\n\t\tbundlesPromises.push( bundle.write( outputConfigCJS ) );\n\t} else {\n\t\tonWarn( `Skipping CJS build for ${ source }` );\n\t}\n\n\tawait Promise.all( bundlesPromises );\n\n\tif ( output.types ) {\n\t\tawait bundleTypes( {\n\t\t\tproject: packageInfo.project,\n\t\t\tsourceFile: source,\n\t\t\toutputFile: output.types,\n\t\t\ttsConfig: output.tsConfig,\n\t\t\tonWarn\n\t\t} );\n\t}\n}\n\nfunction getRollupInputConfig( input, output, onwarn = () => {} ) {\n\tconst plugins = [\n\t\tconvertCJS(),\n\n\t\tjson(),\n\n\t\t{\n\t\t\trenderDynamicImport() {\n\t\t\t\treturn {\n\t\t\t\t\tleft: 'import(',\n\t\t\t\t\tright: ');'\n\t\t\t\t};\n\t\t\t}\n\t\t},\n\n\t\tbabel( {\n\t\t\tbabelrc: false,\n\t\t\tbabelHelpers: 'bundled',\n\t\t\tpresets: [\n\t\t\t\t[\n\t\t\t\t\tpreset,\n\t\t\t\t\t{\n\t\t\t\t\t\ttargets: {\n\t\t\t\t\t\t\tnode: nodeTarget\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t]\n\t\t} ),\n\n\t\tterser()\n\t];\n\n\t// In case of TypeScript, we need to add the plugin.\n\t// We need to add it before the Babel plugin, so it's at index 2.\n\t// Yep, it's not too elegant…\n\tif ( output.type === 'ts' ) {\n\t\tplugins.splice( 2, 0, typescript( {\n\t\t\ttsconfig: output.tsConfig ? output.tsConfig : false,\n\t\t\tdeclaration: false\n\t\t} ) );\n\t}\n\n\treturn {\n\t\tinput,\n\t\tonwarn,\n\t\tplugins\n\t};\n}\n\nfunction getRollupOutputConfig( outputPath, banner, format = 'esm' ) {\n\treturn {\n\t\tbanner,\n\t\tsourcemap: true,\n\t\tformat,\n\t\tfile: outputPath,\n\t\texports: 'auto'\n\t};\n}\n\nasync function bundleTypes( {\n\tproject,\n\tsourceFile,\n\toutputFile,\n\tonWarn = () => {}\n} = {} ) {\n\tproject = normalizePath( project );\n\n\treturn temporaryDirectoryTask( async ( outputDirPath ) => {\n\t\toutputDirPath = normalizePath( outputDirPath );\n\n\t\tconst tsFiles = await globby( 'src/**/*.ts', {\n\t\t\tabsolute: true,\n\t\t\tcwd: project\n\t\t} );\n\t\tconst normalizedTSFiles = tsFiles.map( ( file ) => {\n\t\t\treturn normalizePath( file );\n\t\t} );\n\t\tconst compilerOptions = {\n\t\t\tdeclaration: true,\n\t\t\temitDeclarationOnly: true\n\t\t};\n\t\tconst emittedFiles = {};\n\n\t\t// Just to be sure…\n\t\tdelete compilerOptions.declarationDir;\n\n\t\tconst host = ts.createCompilerHost( compilerOptions );\n\t\thost.writeFile = ( fileName, contents ) => {\n\t\t\t// Seems that even TS uses POSIX-style filepaths on Windows…\n\t\t\tconst normalizedFileName = normalizePath( fileName );\n\n\t\t\temittedFiles[ normalizedFileName ] = contents;\n\t\t};\n\n\t\t// Prepare and emit the d.ts files\n\t\tconst program = ts.createProgram( normalizedTSFiles, compilerOptions, host );\n\t\tprogram.emit();\n\n\t\tconst fsPromises = Object.entries( emittedFiles ).map( async ( [ name, content ] ) => {\n\t\t\tconst relativePath = getRelativePath( name );\n\t\t\tconst filePath = resolvePath( outputDirPath, relativePath );\n\t\t\tconst dirPath = dirname( filePath );\n\n\t\t\tawait mkdir( dirPath, {\n\t\t\t\trecursive: true\n\t\t\t} );\n\n\t\t\treturn writeFile( filePath, content, {\n\t\t\t\tencoding: 'utf-8',\n\t\t\t\tflag: 'w'\n\t\t\t} );\n\t\t} );\n\n\t\tawait Promise.all( fsPromises );\n\n\t\tconst input = getOriginalDTsFilePath( outputDirPath );\n\t\tconst rollupConfig = {\n\t\t\tinput,\n\t\t\tplugins: [\n\t\t\t\t{\n\t\t\t\t\t// Fix \"CWD\" issue.\n\t\t\t\t\t// See: https://github.com/rollup/rollup/issues/558.\n\t\t\t\t\tresolveId: ( imported ) => {\n\t\t\t\t\t\tif ( imported.startsWith( outputDirPath ) ) {\n\t\t\t\t\t\t\treturn imported;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t},\n\n\t\t\t\tdts()\n\t\t\t],\n\t\t\tonwarn: onWarn\n\t\t};\n\t\tconst outputConfig = {\n\t\t\tfile: outputFile,\n\t\t\tformat: 'es'\n\t\t};\n\t\tconst bundle = await rollup( rollupConfig );\n\n\t\tawait bundle.write( outputConfig );\n\t} );\n\n\tfunction getOriginalDTsFilePath( outDirPath ) {\n\t\t// We need the relative path to the .d.ts file. So:\n\t\t// 1. Get the relative path via getRelativePath().\n\t\t// 2. Replace the .ts extension with the .d.ts one.\n\t\tconst originalFileName = getRelativePath( sourceFile ).replace( /\\.ts$/, '.d.ts' );\n\t\tconst originalFilePath = resolvePath( outDirPath, originalFileName );\n\n\t\treturn originalFilePath;\n\t}\n\n\tfunction getRelativePath( filePath ) {\n\t\t// We need the relative path to the .d.ts file. So:\n\t\t// 1. Normalize the filePath (just to be sure).\n\t\t// 2. Remove the project path.\n\t\t// 3. Remove the leading slash/backslash.\n\t\tconst relativeFilePath = normalizePath( filePath ).\n\t\t\treplace( project, '' ).\n\t\t\treplace( /^[/\\\\]/, '' );\n\n\t\treturn relativeFilePath;\n\t}\n}\n\nexport default bundler;\n","function generateBanner( metadata ) {\n\treturn `/*! ${metadata.name} v${metadata.version} | (c) ${new Date().getFullYear()} ${metadata.author} | ${metadata.license} license (see LICENSE) */`;\n}\n\nexport default generateBanner;\n","/* istanbul ignore file */\nimport { resolve as resolvePath } from 'node:path';\nimport { rimraf } from 'rimraf';\nimport consoleControlStrings from 'console-control-strings';\nimport OutputController from './OutputController.js';\nimport packageParser from './packageParser.js';\nimport bundler from './bundler.js';\n\nasync function rlb() {\n\tconst outputController = new OutputController();\n\n\ttry {\n\t\tawait outputController.showSpinner();\n\n\t\tconst packageDirectory = process.cwd();\n\t\tconst distPath = resolvePath( packageDirectory, 'dist' );\n\n\t\tawait rimraf( distPath );\n\n\t\tconst packageInfo = await packageParser( packageDirectory );\n\n\t\tawait bundler( {\n\t\t\tonWarn( warning ) {\n\t\t\t\toutputController.addWarning( warning );\n\t\t\t},\n\t\t\tpackageInfo\n\t\t} );\n\n\t\toutputController.addLog( `${ consoleControlStrings.color( [ 'bold', 'green' ] ) }Bundling complete!${ consoleControlStrings.color( 'reset' ) }` );\n\t} catch ( error ) {\n\t\toutputController.displayError( error );\n\t\toutputController.addLog( `${ consoleControlStrings.color( [ 'bold', 'red' ] ) }Bundling failed!${ consoleControlStrings.color( 'reset' ) }` );\n\t} finally {\n\t\tawait outputController.hideSpinner();\n\t\toutputController.display();\n\t}\n}\n\nexport default rlb;\n"],"names":["stdoutSymbol","Symbol","stderrSymbol","spinnerSymbol","OutputController","constructor","stdout","process","stderr","isValidStream","TypeError","this","console","Console","Spinner","label","pendingLogs","pendingWarnings","async","show","hide","addLog","args","push","addWarning","warningMessage","log","code","warning","message","consoleControlStrings","color","createWarning","display","forEach","warn","displayError","error","errorLog","name","stack","stackParts","split","shift","newStack","join","createError","value","WritableStream","DuplexStream","globby","packageParser","packageDir","metadata","dirPath","path","joinPath","access","ReferenceError","contents","readFile","parsed","JSON","parse","e","SyntaxError","loadAndParsePackageJSONFile","obj","_obj$exports","_obj$exports2","_obj$exports2$","version","exports","import","author","license","lintObject","project","prepareAuthorMetadata","dist","prepareDistMetadata","prepareMetadata","String","subpaths","Object","keys","filter","subpath","startsWith","includes","unshift","getSubPaths","exportMetadata","Promise","all","map","subPath","subPathFilePath","globbyModule","srcPath","subPathFileName","subPathGlobPattern","matchedFiles","cwd","fileExtensions","orderedFiles","sort","a","b","indexOf","extname","getEntryPoint","getSubPathFilePath","esmTarget","exportsTarget","getExportsTarget","getESMTarget","cjsTarget","getCJSTarget","exportType","isTS","toLowerCase","endsWith","getEntryPointType","esm","type","cjs","typesTarget","getTypesTarget","tsConfigPath","tsConfigGlobPattern","length","find","getTSConfigPath","types","tsConfig","prepareExportMetadata","reduce","targets","currentTargets","node","replace","temporaryDirectoryTask","bundler","onWarn","packageInfo","tempyModule","distInfo","entries","source","output","banner","Date","getFullYear","inputConfig","input","onwarn","plugins","convertCJS","json","renderDynamicImport","left","right","babel","babelrc","babelHelpers","presets","preset","nodeTarget","terser","splice","typescript","tsconfig","declaration","getRollupInputConfig","otuputConfigESM","getRollupOutputConfig","bundle","rollup","bundlesPromises","write","outputConfigCJS","sourceFile","outputFile","normalizePath","outputDirPath","normalizedTSFiles","absolute","file","compilerOptions","emitDeclarationOnly","emittedFiles","declarationDir","host","ts","createCompilerHost","writeFile","fileName","normalizedFileName","createProgram","emit","fsPromises","content","relativePath","getRelativePath","filePath","resolvePath","dirname","mkdir","recursive","encoding","flag","rollupConfig","getOriginalDTsFilePath","resolveId","imported","dts","outputConfig","format","outDirPath","originalFileName","bundleTypes","bundleChunk","bundleChunks","outputPath","sourcemap","rlb","outputController","showSpinner","packageDirectory","distPath","rimraf","hideSpinner"],"mappings":"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"}