/*! @comandeer/rollup-lib-bundler v0.11.0 | (c) 2020 Comandeer | MIT license (see LICENSE) */
"use strict";function e(e){return e&&"object"==typeof e&&"default"in e?e.default:e}var r=require("fs"),t=require("rollup"),n=e(require("@rollup/plugin-commonjs")),o=require("rollup-plugin-terser"),i=e(require("@rollup/plugin-json")),s=e(require("@rollup/plugin-babel")),u=e(require("@babel/preset-env"));function a(e){if("string"==typeof e)e=function(e){if(!r.existsSync(e))throw new ReferenceError("File with given path does not exist.");const t=r.readFileSync(e,"utf8");let n;try{n=JSON.parse(t)}catch(e){throw new SyntaxError("Given file is not parsable as a correct JSON.")}return n}(e);else if("object"!=typeof e)throw new TypeError("Provide string or object.");return function(e){function r(r){if(void 0===e[r])throw new ReferenceError(`Package metadata must contain "${r}" property.`)}r("name"),r("version"),r("main"),function(r,t){if(void 0===e[r]&&void 0===e[t])throw new ReferenceError(`Package metadata must contain either "${r}" or "${t}" or both properties.`)}("module","jsnext:main"),r("author"),r("license")}(e),{name:(t=e).name,version:t.version,author:c(t.author),license:t.license,src:"src/index.js",dist:{esm:t.module||t["jsnext:main"],cjs:t.main}};var t}function c(e){return"object"!=typeof e?String(e):e.name}function l(e,r){const t=function(e){return`/*! ${e.name} v${e.version} | (c) ${(new Date).getFullYear()} ${e.author} | ${e.license} license (see LICENSE) */`}(e),a=[n(),i(),s({babelrc:!1,babelHelpers:"bundled",presets:[[u,{targets:{node:"10.0.0"}}]]}),o.terser()];return{input:e.src,plugins:a,output:{banner:t,sourcemap:!0,format:r?"cjs":"es",file:r?e.dist.cjs:e.dist.esm}}}module.exports=function(){return async function(e){const r=l(e,!0),n=l(e,!1),o=await Promise.all([t.rollup(r),t.rollup(n)]);return Promise.all([o[0].write(r.output),o[1].write(n.output)])}(a("package.json"))};
//# sourceMappingURL=rollup-lib-bundler.js.map
