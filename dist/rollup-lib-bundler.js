/*! @comandeer/rollup-lib-bundler v0.12.0 | (c) 2020 Comandeer | MIT license (see LICENSE) */
"use strict";var e=require("fs"),r=require("rollup"),t=require("@rollup/plugin-commonjs"),n=require("rollup-plugin-terser"),o=require("@rollup/plugin-json"),i=require("@rollup/plugin-babel"),u=require("@babel/preset-env");function s(e){return e&&"object"==typeof e&&"default"in e?e:{default:e}}var a=s(t),l=s(o),c=s(i),p=s(u);function f(r){if("string"==typeof r)r=function(r){if(!e.existsSync(r))throw new ReferenceError("File with given path does not exist.");const t=e.readFileSync(r,"utf8");let n;try{n=JSON.parse(t)}catch(e){throw new SyntaxError("Given file is not parsable as a correct JSON.")}return n}(r);else if("object"!=typeof r)throw new TypeError("Provide string or object.");return function(e){function r(r){if(void 0===e[r])throw new ReferenceError(`Package metadata must contain "${r}" property.`)}r("name"),r("version"),r("main"),function(r,t){if(void 0===e[r]&&void 0===e[t])throw new ReferenceError(`Package metadata must contain either "${r}" or "${t}" or both properties.`)}("module","jsnext:main"),r("author"),r("license")}(r),{name:(t=r).name,version:t.version,author:d(t.author),license:t.license,src:"src/index.js",dist:{esm:t.module||t["jsnext:main"],cjs:t.main}};var t}function d(e){return"object"!=typeof e?String(e):e.name}function m(e,r){const t=function(e){return`/*! ${e.name} v${e.version} | (c) ${(new Date).getFullYear()} ${e.author} | ${e.license} license (see LICENSE) */`}(e),o=[a.default(),l.default(),c.default({babelrc:!1,babelHelpers:"bundled",presets:[[p.default,{targets:{node:"10.0.0"}}]]}),n.terser()];return{input:e.src,plugins:o,output:{banner:t,sourcemap:!0,format:r?"cjs":"es",file:r?e.dist.cjs:e.dist.esm,exports:"auto"}}}module.exports=function(){return async function(e){const t=m(e,!0),n=m(e,!1),o=await Promise.all([r.rollup(t),r.rollup(n)]);return Promise.all([o[0].write(t.output),o[1].write(n.output)])}(f("package.json"))};
//# sourceMappingURL=rollup-lib-bundler.js.map
